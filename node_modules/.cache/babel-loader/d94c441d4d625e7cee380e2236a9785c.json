{"ast":null,"code":"var _jsxFileName = \"/Users/hoanganh0722/Desktop/Web/gstorevn/src/components/Dashboard/ChangingPost/ChangingPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Layout from \"../Layout/Layout\";\nimport FieldSet from \"./UI/FieldSet\";\nimport { Col, Row } from \"react-bootstrap\";\nimport Submit from \"./UI/Submit/Submit\";\nimport Container from \"../container/Container\";\nimport Loading from \"../../../UI/Loading/Loading\";\nimport styles from \"./ChangingPost.module.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changePostActions } from \"../../redux-store/change-post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChangingPost = () => {\n  _s();\n\n  const [newImagesUploading, setNewImagesUploading] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const dispatch = useDispatch();\n  const information = useSelector(state => state.post.information);\n  const imagesArray = useSelector(state => state.post.imagesArray);\n\n  const submitHandler = async event => {\n    event.preventDefault();\n\n    if (newImagesUploading.length !== 0) {\n      const formData = new FormData();\n      newImagesUploading.forEach(items => {\n        formData.append(\"photos\", items);\n      });\n      setLoading(true);\n\n      try {\n        const response = await fetch(\"http://localhost:3001/api/images\", {\n          method: \"POST\",\n          body: formData // headers: {'Content-Type': 'multipart/form-data'}\n\n        });\n\n        if (!response.ok) {\n          throw new Error(\"error\");\n        }\n\n        const dataItems = await response.json();\n        const newArray = dataItems.map(items => {\n          return items.filename;\n        });\n        console.log(dataItems);\n        dispatch(changePostActions.getImages(newArray));\n        console.log(imagesArray);\n      } catch (err) {\n        setError(true);\n        setLoading(false);\n        return;\n      }\n\n      try {\n        const response = await fetch('http://localhost:3001/api/upload', {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(information)\n        });\n\n        if (!response.ok) {\n          throw new Error('error');\n        }\n\n        const data = await response.json();\n        console.log(data);\n      } catch (err) {\n        setError(true);\n      }\n\n      setLoading(false);\n    }\n  };\n\n  const setNewImages = items => {\n    setNewImagesUploading(items);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(Loading, {\n      className: styles.loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      title: \"Ch\\u1EC9nh S\\u1EEDa B\\xE0i Vi\\u1EBFt\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            sm: 12,\n            md: 12,\n            lg: 8,\n            children: /*#__PURE__*/_jsxDEV(Container, {\n              children: /*#__PURE__*/_jsxDEV(FieldSet, {\n                setNewImages: setNewImages\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            sm: 12,\n            md: 12,\n            lg: 4,\n            children: /*#__PURE__*/_jsxDEV(Container, {\n              children: /*#__PURE__*/_jsxDEV(Submit, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ChangingPost, \"RpFTWjJWqSOzARt3DrIp/rd7zUw=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ChangingPost;\nexport default ChangingPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangingPost\");","map":{"version":3,"sources":["/Users/hoanganh0722/Desktop/Web/gstorevn/src/components/Dashboard/ChangingPost/ChangingPost.js"],"names":["React","useState","Layout","FieldSet","Col","Row","Submit","Container","Loading","styles","useDispatch","useSelector","changePostActions","ChangingPost","newImagesUploading","setNewImagesUploading","loading","setLoading","error","setError","dispatch","information","state","post","imagesArray","submitHandler","event","preventDefault","length","formData","FormData","forEach","items","append","response","fetch","method","body","ok","Error","dataItems","json","newArray","map","filename","console","log","getImages","err","headers","JSON","stringify","data","setNewImages"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Layout from \"../Layout/Layout\";\nimport FieldSet from \"./UI/FieldSet\";\nimport { Col, Row } from \"react-bootstrap\";\nimport Submit from \"./UI/Submit/Submit\";\nimport Container from \"../container/Container\";\nimport Loading from \"../../../UI/Loading/Loading\";\nimport styles from \"./ChangingPost.module.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changePostActions } from \"../../redux-store/change-post\";\nconst ChangingPost = () => {\n  const [newImagesUploading, setNewImagesUploading] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const dispatch = useDispatch();\n  const information = useSelector((state) => state.post.information);\n  const imagesArray = useSelector(state => state.post.imagesArray);\n  const submitHandler = async (event) => {\n    event.preventDefault();\n    if (newImagesUploading.length !== 0) {\n      const formData = new FormData();\n      newImagesUploading.forEach((items) => {\n        formData.append(\"photos\", items);\n      });\n      setLoading(true);\n      try {\n        const response = await fetch(\"http://localhost:3001/api/images\", {\n          method: \"POST\",\n          body: formData,\n          // headers: {'Content-Type': 'multipart/form-data'}\n        });\n        if (!response.ok) {\n          throw new Error(\"error\");\n        }\n        const dataItems = await response.json();\n        const newArray = dataItems.map(items =>{\n          return items.filename;\n        })\n        console.log(dataItems);\n        dispatch(changePostActions.getImages(newArray));\n        console.log(imagesArray);\n      } catch (err) {\n        setError(true);\n        setLoading(false);\n        return;\n      }\n      try{\n        const response = await fetch('http://localhost:3001/api/upload', {\n          method: 'PUT',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify(information)\n        })\n        if(!response.ok){\n          throw new Error('error');\n        }\n        const data = await response.json();\n        console.log(data);\n      }catch(err){\n        setError(true);\n      }\n      setLoading(false);\n    }\n  };\n  const setNewImages = (items) => {\n    setNewImagesUploading(items);\n  };\n  return (\n    <>\n      {loading && <Loading className={styles.loading} />}\n      <Layout title=\"Chỉnh Sửa Bài Viết\">\n        <form onSubmit={submitHandler}>\n          <Row>\n            <Col xs={12} sm={12} md={12} lg={8}>\n              <Container>\n                <FieldSet setNewImages={setNewImages} />\n              </Container>\n            </Col>\n            <Col xs={12} sm={12} md={12} lg={4}>\n              <Container>\n                <Submit />\n              </Container>\n            </Col>\n          </Row>\n        </form>\n      </Layout>\n    </>\n  );\n};\n\nexport default ChangingPost;\n"]},"metadata":{},"sourceType":"module"}