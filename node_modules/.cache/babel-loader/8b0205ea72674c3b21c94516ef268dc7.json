{"ast":null,"code":"var _jsxFileName = \"/Users/hoanganh0722/Desktop/Web/gstorevn/src/components/Dashboard/AnalyticsPosts/AnalyticsPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport useHttp from '../../hook/use-http';\nimport Container from '../helper/Container/Container';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRss } from '@fortawesome/free-solid-svg-icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchingPostsHandler } from '../../redux-store/get-posts';\nimport Loading from '../../../UI/Loading/Loading';\nimport styles from './AnalyticsPost.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnalyticsPost = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const loading = useSelector(state => state.getPosts.status);\n  const error = useSelector(state => state.getPosts.error);\n  const data = useSelector(state => state.getPosts.posts);\n  useEffect(() => {\n    dispatch(fetchingPostsHandler());\n  }, [dispatch]);\n  console.log(loading, error, data);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [loading === 'pending' && !error && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 49\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"S\\u1ED1 l\\u01B0\\u1EE3ng b\\xE0i vi\\u1EBFt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AnalyticsPost, \"je5L0PAjRAHhmplo/7yEMekKskE=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = AnalyticsPost;\nexport default AnalyticsPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnalyticsPost\");","map":{"version":3,"sources":["/Users/hoanganh0722/Desktop/Web/gstorevn/src/components/Dashboard/AnalyticsPosts/AnalyticsPost.js"],"names":["React","useEffect","useHttp","Container","FontAwesomeIcon","faRss","useDispatch","useSelector","fetchingPostsHandler","Loading","styles","AnalyticsPost","dispatch","loading","state","getPosts","status","error","data","posts","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAAQC,KAAR,QAAoB,mCAApB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,oBAAT,QAAqC,6BAArC;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;;AACA,MAAMC,aAAa,GAAG,MAAK;AAAA;;AACvB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,OAAO,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeC,MAAzB,CAA3B;AACA,QAAMC,KAAK,GAAGV,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeE,KAAzB,CAAzB;AACA,QAAMC,IAAI,GAAGX,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeI,KAAzB,CAAxB;AACAlB,EAAAA,SAAS,CAAC,MAAK;AACXW,IAAAA,QAAQ,CAACJ,oBAAoB,EAArB,CAAR;AACH,GAFQ,EAEN,CAACI,QAAD,CAFM,CAAT;AAGAQ,EAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ,EAAqBI,KAArB,EAA4BC,IAA5B;AACA,sBACI,QAAC,SAAD;AAAA,eACKL,OAAO,KAAK,SAAZ,IAAyB,CAACI,KAA1B,iBAAmC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADxC,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAfD;;GAAMN,a;UACeL,W,EACDC,W,EACFA,W,EACDA,W;;;KAJXI,a;AAiBN,eAAeA,aAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport useHttp from '../../hook/use-http';\nimport Container from '../helper/Container/Container';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faRss} from '@fortawesome/free-solid-svg-icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchingPostsHandler } from '../../redux-store/get-posts';\nimport Loading from '../../../UI/Loading/Loading';\nimport styles from './AnalyticsPost.module.scss';\nconst AnalyticsPost = () =>{\n    const dispatch = useDispatch();\n    const loading = useSelector(state => state.getPosts.status);\n    const error = useSelector(state => state.getPosts.error);\n    const data = useSelector(state => state.getPosts.posts);\n    useEffect(() =>{\n        dispatch(fetchingPostsHandler());\n    }, [dispatch])\n    console.log(loading, error, data);\n    return(\n        <Container>\n            {loading === 'pending' && !error && <Loading />}\n            <h3>Số lượng bài viết</h3>\n        </Container>\n    )\n}\n\nexport default AnalyticsPost;"]},"metadata":{},"sourceType":"module"}