{"ast":null,"code":"var _jsxFileName = \"/Users/hoanganh0722/Desktop/Web/gstorevn/src/components/Dashboard/Register/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Layout from \"../Layout/Layout\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { Input, Button } from \"@material-ui/core\";\nimport styles from \"./Register.module.scss\";\nimport useInput from \"../../hook/use-input\";\nimport useHttp from \"../../hook/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    status,\n    data,\n    fetchingHandler\n  } = useHttp();\n  const {\n    isTouched: inputEmailIsTouched,\n    isValid: inputEmailIsValid,\n    valueInput: valueEmail,\n    inputIsTouchedHandler: inputEmailIsTouchedHandler,\n    changeInputHandler: changeEmailHandler,\n    resetInputHandler: resetEmailHandler\n  } = useInput(value => value.trim().includes(\"@\"));\n  const {\n    isTouched: passwordIsTouched,\n    isValid: passwordIsValid,\n    valueInput: valuePassword,\n    inputIsTouchedHandler: passwordIsTouchHandler,\n    changeInputHandler: setPasswordHandler,\n    resetInputHandler: resetPasswordHandler\n  } = useInput(value => value.trim().length >= 8);\n  const {\n    isTouched: nameIsTouched,\n    isValid: nameIsValid,\n    valueInput: valueName,\n    inputIsTouchedHandler: nameIsTouchedHandler,\n    changeInputHandler: changeNameHandler,\n    resetInputHandler: resetNameHandler\n  } = useInput(value => value.trim().length > 0);\n\n  const submitHandler = event => {\n    setIsLoading(true);\n    event.preventDefault();\n\n    if (!nameIsValid || !inputEmailIsValid || !passwordIsValid) {\n      return;\n    }\n\n    const information = {\n      username: valueEmail,\n      password: valuePassword,\n      name: valueName\n    };\n    console.log(information);\n    setIsLoading(false);\n    resetEmailHandler();\n    resetPasswordHandler();\n    resetNameHandler();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"\\u0110\\u0103ng K\\xFD\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          sm: 12,\n          md: 6,\n          lg: 6,\n          className: styles.col,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            onBlur: inputEmailIsTouchedHandler,\n            onChange: changeEmailHandler,\n            value: valueEmail,\n            type: \"text\",\n            id: \"email\",\n            placeholder: \"Email...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), !inputEmailIsValid && inputEmailIsTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Email kh\\xF4ng h\\u1EE3p l\\u1EC7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 59\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"M\\u1EADt kh\\u1EA9u\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            onBlur: passwordIsTouchHandler,\n            value: valuePassword,\n            onChange: setPasswordHandler,\n            type: \"password\",\n            id: \"password\",\n            placeholder: \"Password...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), !passwordIsValid && passwordIsTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"M\\u1EADt kh\\u1EA9u kh\\xF4ng h\\u1EE3p l\\u1EC7 (\\xEDt nh\\u1EA5t 8 k\\xFD t\\u1EF1)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 55\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          sm: 12,\n          md: 6,\n          lg: 6,\n          className: styles.col,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"T\\xEAn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            onBlur: nameIsTouchedHandler,\n            value: valueName,\n            onChange: changeNameHandler,\n            type: \"text\",\n            id: \"name\",\n            placeholder: \"T\\xEAn...\",\n            className: `${!nameIsValid && nameIsTouched && 'Mui-error'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), !nameIsValid && nameIsTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"T\\xEAn kh\\xF4ng \\u0111\\u01B0\\u1EE3c \\u0111\\u1EC3 tr\\u1ED1ng\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.btn,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          disabled: !nameIsValid || !inputEmailIsValid || !passwordIsValid,\n          type: \"submit\",\n          variant: \"contained\",\n          children: \"\\u0110\\u0103ng K\\xFD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"PVCrAV6cymAFboRbRlbV/uI6xXY=\", false, function () {\n  return [useHttp, useInput, useInput, useInput];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/hoanganh0722/Desktop/Web/gstorevn/src/components/Dashboard/Register/Register.js"],"names":["React","useState","Layout","Row","Col","Input","Button","styles","useInput","useHttp","Register","isLoading","setIsLoading","status","data","fetchingHandler","isTouched","inputEmailIsTouched","isValid","inputEmailIsValid","valueInput","valueEmail","inputIsTouchedHandler","inputEmailIsTouchedHandler","changeInputHandler","changeEmailHandler","resetInputHandler","resetEmailHandler","value","trim","includes","passwordIsTouched","passwordIsValid","valuePassword","passwordIsTouchHandler","setPasswordHandler","resetPasswordHandler","length","nameIsTouched","nameIsValid","valueName","nameIsTouchedHandler","changeNameHandler","resetNameHandler","submitHandler","event","preventDefault","information","username","password","name","console","log","col","btn"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport Layout from \"../Layout/Layout\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { Input, Button } from \"@material-ui/core\";\nimport styles from \"./Register.module.scss\";\nimport useInput from \"../../hook/use-input\";\nimport useHttp from \"../../hook/use-http\";\nconst Register = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const {status, data, fetchingHandler} = useHttp();\n  const {\n    isTouched: inputEmailIsTouched,\n    isValid: inputEmailIsValid,\n    valueInput: valueEmail,\n    inputIsTouchedHandler: inputEmailIsTouchedHandler,\n    changeInputHandler: changeEmailHandler,\n    resetInputHandler: resetEmailHandler,\n  } = useInput((value) => value.trim().includes(\"@\"));\n  const {\n    isTouched: passwordIsTouched,\n    isValid: passwordIsValid,\n    valueInput: valuePassword,\n    inputIsTouchedHandler: passwordIsTouchHandler,\n    changeInputHandler: setPasswordHandler,\n    resetInputHandler: resetPasswordHandler,\n  } = useInput((value) => value.trim().length >= 8);\n  const {\n    isTouched: nameIsTouched,\n    isValid: nameIsValid,\n    valueInput: valueName,\n    inputIsTouchedHandler: nameIsTouchedHandler,\n    changeInputHandler: changeNameHandler,\n    resetInputHandler: resetNameHandler,\n  } = useInput((value) => value.trim().length > 0);\n\n  const submitHandler = (event) =>{\n        setIsLoading(true);\n      event.preventDefault();\n      if(!nameIsValid || !inputEmailIsValid || !passwordIsValid){\n          return;\n      }\n\n      const information = {\n          username: valueEmail,\n          password: valuePassword,\n          name: valueName\n      }\n      console.log(information);\n      setIsLoading(false);\n      resetEmailHandler();\n      resetPasswordHandler();\n      resetNameHandler();\n  }\n  return (\n    <Layout title=\"Đăng Ký\">\n      <form onSubmit={submitHandler}>\n        <Row>\n          <Col xs={12} sm={12} md={6} lg={6} className={styles.col}>\n            <label htmlFor=\"email\">Email</label>\n            <Input\n              onBlur={inputEmailIsTouchedHandler}\n              onChange={changeEmailHandler}\n              value={valueEmail}\n              type=\"text\"\n              id=\"email\"\n              placeholder=\"Email...\"\n            />\n            {!inputEmailIsValid && inputEmailIsTouched && <p>Email không hợp lệ</p>}\n            <label htmlFor=\"password\">Mật khẩu</label>\n            <Input\n              onBlur={passwordIsTouchHandler}\n              value={valuePassword}\n              onChange={setPasswordHandler}\n              type=\"password\"\n              id=\"password\"\n              placeholder=\"Password...\"\n            />\n            {!passwordIsValid && passwordIsTouched && <p>Mật khẩu không hợp lệ (ít nhất 8 ký tự)</p>}\n          </Col>\n          <Col xs={12} sm={12} md={6} lg={6} className={styles.col}>\n            <label htmlFor=\"name\">Tên</label>\n            <Input\n              onBlur={nameIsTouchedHandler}\n              value={valueName}\n              onChange={changeNameHandler}\n              type=\"text\"\n              id=\"name\"\n              placeholder=\"Tên...\"\n              className={`${!nameIsValid && nameIsTouched && 'Mui-error'}`}\n            />\n            {!nameIsValid && nameIsTouched && <p>Tên không được để trống</p>}\n          </Col>\n        </Row>\n        <div className={styles.btn}>\n          <Button disabled={!nameIsValid || !inputEmailIsValid || !passwordIsValid} type=\"submit\" variant=\"contained\">\n            Đăng Ký\n          </Button>\n        </div>\n      </form>\n    </Layout>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}