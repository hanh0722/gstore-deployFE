{"ast":null,"code":"var _jsxFileName = \"/Users/hoanganh0722/Desktop/Web/gstorevn/src/components/Dashboard/Register/Register.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Layout from \"../Layout/Layout\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { Input, Button } from \"@material-ui/core\";\nimport styles from \"./Register.module.scss\";\nimport useInput from \"../../hook/use-input\";\nimport useHttp from \"../../hook/use-http\";\nimport Loading from \"../../../UI/Loading/Loading\";\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const {\n    status,\n    data,\n    fetchingDataHandler,\n    error\n  } = useHttp();\n  const {\n    isTouched: inputEmailIsTouched,\n    isValid: inputEmailIsValid,\n    valueInput: valueEmail,\n    inputIsTouchedHandler: inputEmailIsTouchedHandler,\n    changeInputHandler: changeEmailHandler,\n    resetInputHandler: resetEmailHandler\n  } = useInput(value => value.trim().includes(\"@\"));\n  const {\n    isTouched: passwordIsTouched,\n    isValid: passwordIsValid,\n    valueInput: valuePassword,\n    inputIsTouchedHandler: passwordIsTouchHandler,\n    changeInputHandler: setPasswordHandler,\n    resetInputHandler: resetPasswordHandler\n  } = useInput(value => value.trim().length >= 8);\n  const {\n    isTouched: nameIsTouched,\n    isValid: nameIsValid,\n    valueInput: valueName,\n    inputIsTouchedHandler: nameIsTouchedHandler,\n    changeInputHandler: changeNameHandler,\n    resetInputHandler: resetNameHandler\n  } = useInput(value => value.trim().length > 0);\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (!nameIsValid || !inputEmailIsValid || !passwordIsValid) {\n      return;\n    }\n\n    const information = {\n      email: valueEmail,\n      password: valuePassword,\n      name: valueName\n    };\n    fetchingDataHandler({\n      url: 'http://localhost:3001/register',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: information\n    });\n    resetEmailHandler();\n    resetPasswordHandler();\n    resetNameHandler();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Layout, {\n      title: \"\\u0110\\u0103ng K\\xFD\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            sm: 12,\n            md: 6,\n            lg: 6,\n            className: styles.col,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              onBlur: inputEmailIsTouchedHandler,\n              onChange: changeEmailHandler,\n              value: valueEmail,\n              type: \"text\",\n              id: \"email\",\n              placeholder: \"Email...\",\n              className: `${!inputEmailIsValid && inputEmailIsTouched && 'Mui-error'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 13\n            }, this), !inputEmailIsValid && inputEmailIsTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Email kh\\xF4ng h\\u1EE3p l\\u1EC7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 59\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"M\\u1EADt kh\\u1EA9u\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              onBlur: passwordIsTouchHandler,\n              value: valuePassword,\n              onChange: setPasswordHandler,\n              type: \"password\",\n              id: \"password\",\n              placeholder: \"Password...\",\n              className: `${!passwordIsValid && passwordIsTouched && 'Mui-error'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 13\n            }, this), !passwordIsValid && passwordIsTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"M\\u1EADt kh\\u1EA9u kh\\xF4ng h\\u1EE3p l\\u1EC7 (\\xEDt nh\\u1EA5t 8 k\\xFD t\\u1EF1)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 55\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            sm: 12,\n            md: 6,\n            lg: 6,\n            className: styles.col,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"T\\xEAn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              onBlur: nameIsTouchedHandler,\n              value: valueName,\n              onChange: changeNameHandler,\n              type: \"text\",\n              id: \"name\",\n              placeholder: \"T\\xEAn...\",\n              className: `${!nameIsValid && nameIsTouched && 'Mui-error'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 13\n            }, this), !nameIsValid && nameIsTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"T\\xEAn kh\\xF4ng \\u0111\\u01B0\\u1EE3c \\u0111\\u1EC3 tr\\u1ED1ng\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 47\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.btn,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            disabled: !nameIsValid || !inputEmailIsValid || !passwordIsValid,\n            type: \"submit\",\n            variant: \"contained\",\n            children: \"\\u0110\\u0103ng K\\xFD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this), data.id && status === 'completed' && /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this), status === 'pending' && /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(Loading, {\n      className: styles.loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 52\n    }, this), document.getElementById('overlay'))]\n  }, void 0, true);\n};\n\n_s(Register, \"6RZxbU7YDwfa+BPhQvvLCJcMiIg=\", false, function () {\n  return [useHttp, useInput, useInput, useInput];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/hoanganh0722/Desktop/Web/gstorevn/src/components/Dashboard/Register/Register.js"],"names":["React","Layout","Row","Col","Input","Button","styles","useInput","useHttp","Loading","ReactDOM","Register","status","data","fetchingDataHandler","error","isTouched","inputEmailIsTouched","isValid","inputEmailIsValid","valueInput","valueEmail","inputIsTouchedHandler","inputEmailIsTouchedHandler","changeInputHandler","changeEmailHandler","resetInputHandler","resetEmailHandler","value","trim","includes","passwordIsTouched","passwordIsValid","valuePassword","passwordIsTouchHandler","setPasswordHandler","resetPasswordHandler","length","nameIsTouched","nameIsValid","valueName","nameIsTouchedHandler","changeNameHandler","resetNameHandler","submitHandler","event","preventDefault","information","email","password","name","url","method","headers","body","col","btn","id","createPortal","loading","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Layout from \"../Layout/Layout\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { Input, Button } from \"@material-ui/core\";\nimport styles from \"./Register.module.scss\";\nimport useInput from \"../../hook/use-input\";\nimport useHttp from \"../../hook/use-http\";\nimport Loading from \"../../../UI/Loading/Loading\";\nimport ReactDOM from 'react-dom';\nconst Register = () => {\n    const {status, data, fetchingDataHandler, error} = useHttp();\n  const {\n    isTouched: inputEmailIsTouched,\n    isValid: inputEmailIsValid,\n    valueInput: valueEmail,\n    inputIsTouchedHandler: inputEmailIsTouchedHandler,\n    changeInputHandler: changeEmailHandler,\n    resetInputHandler: resetEmailHandler,\n  } = useInput((value) => value.trim().includes(\"@\"));\n  const {\n    isTouched: passwordIsTouched,\n    isValid: passwordIsValid,\n    valueInput: valuePassword,\n    inputIsTouchedHandler: passwordIsTouchHandler,\n    changeInputHandler: setPasswordHandler,\n    resetInputHandler: resetPasswordHandler,\n  } = useInput((value) => value.trim().length >= 8);\n  const {\n    isTouched: nameIsTouched,\n    isValid: nameIsValid,\n    valueInput: valueName,\n    inputIsTouchedHandler: nameIsTouchedHandler,\n    changeInputHandler: changeNameHandler,\n    resetInputHandler: resetNameHandler,\n  } = useInput((value) => value.trim().length > 0);\n\n  const submitHandler = (event) =>{\n      event.preventDefault();\n      if(!nameIsValid || !inputEmailIsValid || !passwordIsValid){\n          return;\n      }\n      const information = {\n          email: valueEmail,\n          password: valuePassword,\n          name: valueName\n      }\n      fetchingDataHandler({\n        url: 'http://localhost:3001/register',\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: information\n      })\n      resetEmailHandler();\n      resetPasswordHandler();\n      resetNameHandler();\n  }\n  return (\n    <>\n    <Layout title=\"Đăng Ký\">\n      <form onSubmit={submitHandler}>\n        <Row>\n          <Col xs={12} sm={12} md={6} lg={6} className={styles.col}>\n            <label htmlFor=\"email\">Email</label>\n            <Input\n              onBlur={inputEmailIsTouchedHandler}\n              onChange={changeEmailHandler}\n              value={valueEmail}\n              type=\"text\"\n              id=\"email\"\n              placeholder=\"Email...\"\n              className={`${!inputEmailIsValid && inputEmailIsTouched && 'Mui-error'}`}\n            />\n            {!inputEmailIsValid && inputEmailIsTouched && <p>Email không hợp lệ</p>}\n            <label htmlFor=\"password\">Mật khẩu</label>\n            <Input\n              onBlur={passwordIsTouchHandler}\n              value={valuePassword}\n              onChange={setPasswordHandler}\n              type=\"password\"\n              id=\"password\"\n              placeholder=\"Password...\"\n              className={`${!passwordIsValid && passwordIsTouched && 'Mui-error'}`}\n            />\n            {!passwordIsValid && passwordIsTouched && <p>Mật khẩu không hợp lệ (ít nhất 8 ký tự)</p>}\n          </Col>\n          <Col xs={12} sm={12} md={6} lg={6} className={styles.col}>\n            <label htmlFor=\"name\">Tên</label>\n            <Input\n              onBlur={nameIsTouchedHandler}\n              value={valueName}\n              onChange={changeNameHandler}\n              type=\"text\"\n              id=\"name\"\n              placeholder=\"Tên...\"\n              className={`${!nameIsValid && nameIsTouched && 'Mui-error'}`}\n            />\n            {!nameIsValid && nameIsTouched && <p>Tên không được để trống</p>}\n          </Col>\n        </Row>\n        <div className={styles.btn}>\n          <Button disabled={!nameIsValid || !inputEmailIsValid || !passwordIsValid} type=\"submit\" variant=\"contained\">\n            Đăng Ký\n          </Button>\n        </div>\n        {data.id && status === 'completed' && <p></p>}\n      </form>\n    </Layout>\n    {status === 'pending' && ReactDOM.createPortal(<Loading className={styles.loading}/>, document.getElementById('overlay'))}\n    </>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}