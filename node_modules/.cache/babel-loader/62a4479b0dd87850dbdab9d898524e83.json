{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialStateLayout = {\n  isClicked: false,\n  isDownloaded: false\n};\nconst layoutSlice = createSlice({\n  name: \"layout\",\n  initialState: initialStateLayout,\n  reducers: {\n    toggleLayout(state) {\n      state.isClicked = !state.isClicked;\n    },\n\n    toggleDownload(state) {\n      state.isDownloaded = !state.isDownloaded;\n    }\n\n  }\n});\nconst initialStateSignIn = {\n  isSignedIn: false,\n  information: {}\n};\nconst signInSlice = createSlice({\n  name: \"signin\",\n  initialState: initialStateSignIn,\n  reducers: {\n    SignIn(state) {\n      state.isSignedIn = true;\n    },\n\n    SignOut(state) {\n      state.isSignedIn = false;\n    },\n\n    Information(state, action) {\n      state.information = action.payload;\n    }\n\n  }\n});\n\nconst adminInformation = () => {\n  return dispatch => {\n    fetch();\n  };\n};\n\nexport const layoutActions = layoutSlice.actions;\nexport const signInActions = signInSlice.actions;\nconst store = configureStore({\n  reducer: {\n    layout: layoutSlice.reducer,\n    signin: signInSlice.reducer\n  }\n});\nexport default store;","map":{"version":3,"sources":["/Users/hoanganh0722/Desktop/Web/gstorevn/src/components/redux-store/Store.js"],"names":["createSlice","configureStore","initialStateLayout","isClicked","isDownloaded","layoutSlice","name","initialState","reducers","toggleLayout","state","toggleDownload","initialStateSignIn","isSignedIn","information","signInSlice","SignIn","SignOut","Information","action","payload","adminInformation","dispatch","fetch","layoutActions","actions","signInActions","store","reducer","layout","signin"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AACA,MAAMC,kBAAkB,GAAG;AACzBC,EAAAA,SAAS,EAAE,KADc;AAEzBC,EAAAA,YAAY,EAAE;AAFW,CAA3B;AAKA,MAAMC,WAAW,GAAGL,WAAW,CAAC;AAC9BM,EAAAA,IAAI,EAAE,QADwB;AAE9BC,EAAAA,YAAY,EAAEL,kBAFgB;AAG9BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,CAACC,KAAD,EAAQ;AAClBA,MAAAA,KAAK,CAACP,SAAN,GAAkB,CAACO,KAAK,CAACP,SAAzB;AACD,KAHO;;AAIRQ,IAAAA,cAAc,CAACD,KAAD,EAAQ;AACpBA,MAAAA,KAAK,CAACN,YAAN,GAAqB,CAACM,KAAK,CAACN,YAA5B;AACD;;AANO;AAHoB,CAAD,CAA/B;AAaA,MAAMQ,kBAAkB,GAAG;AACzBC,EAAAA,UAAU,EAAE,KADa;AAEzBC,EAAAA,WAAW,EAAE;AAFY,CAA3B;AAIA,MAAMC,WAAW,GAAGf,WAAW,CAAC;AAC9BM,EAAAA,IAAI,EAAE,QADwB;AAE9BC,EAAAA,YAAY,EAAEK,kBAFgB;AAG9BJ,EAAAA,QAAQ,EAAE;AACRQ,IAAAA,MAAM,CAACN,KAAD,EAAQ;AACZA,MAAAA,KAAK,CAACG,UAAN,GAAmB,IAAnB;AACD,KAHO;;AAIRI,IAAAA,OAAO,CAACP,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACG,UAAN,GAAmB,KAAnB;AACD,KANO;;AAORK,IAAAA,WAAW,CAACR,KAAD,EAAQS,MAAR,EAAe;AACxBT,MAAAA,KAAK,CAACI,WAAN,GAAoBK,MAAM,CAACC,OAA3B;AACD;;AATO;AAHoB,CAAD,CAA/B;;AAgBA,MAAMC,gBAAgB,GAAG,MAAK;AAC5B,SAAQC,QAAD,IAAa;AAClBC,IAAAA,KAAK;AACN,GAFD;AAGD,CAJD;;AAKA,OAAO,MAAMC,aAAa,GAAGnB,WAAW,CAACoB,OAAlC;AACP,OAAO,MAAMC,aAAa,GAAGX,WAAW,CAACU,OAAlC;AACP,MAAME,KAAK,GAAG1B,cAAc,CAAC;AAC3B2B,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAExB,WAAW,CAACuB,OADb;AAEPE,IAAAA,MAAM,EAAEf,WAAW,CAACa;AAFb;AADkB,CAAD,CAA5B;AAOA,eAAeD,KAAf","sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialStateLayout = {\n  isClicked: false,\n  isDownloaded: false,\n};\n\nconst layoutSlice = createSlice({\n  name: \"layout\",\n  initialState: initialStateLayout,\n  reducers: {\n    toggleLayout(state) {\n      state.isClicked = !state.isClicked;\n    },\n    toggleDownload(state) {\n      state.isDownloaded = !state.isDownloaded;\n    },\n  },\n});\n\nconst initialStateSignIn = {\n  isSignedIn: false,\n  information: {}\n};\nconst signInSlice = createSlice({\n  name: \"signin\",\n  initialState: initialStateSignIn,\n  reducers: {\n    SignIn(state) {\n      state.isSignedIn = true;\n    },\n    SignOut(state) {\n      state.isSignedIn = false;\n    },\n    Information(state, action){\n      state.information = action.payload\n    }\n  },\n});\n\nconst adminInformation = () =>{\n  return (dispatch) =>{\n    fetch()\n  }\n}\nexport const layoutActions = layoutSlice.actions;\nexport const signInActions = signInSlice.actions;\nconst store = configureStore({\n  reducer: {\n    layout: layoutSlice.reducer,\n    signin: signInSlice.reducer,\n  },\n});\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}