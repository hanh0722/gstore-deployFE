{"ast":null,"code":"var _jsxFileName = \"/Users/hoanganh0722/Desktop/Web/gstorevn/src/components/Dashboard/Register/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"../Layout/Layout\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { Input, Button } from \"@material-ui/core\";\nimport styles from \"./Register.module.scss\";\nimport useInput from \"../../hook/use-input\";\nimport useHttp from \"../../hook/use-http\";\nimport Loading from \"../../../UI/Loading/Loading\";\nimport ReactDOM from \"react-dom\";\nimport Success from \"../BlogDashboard/SuccessMessage/Success\";\nimport { faCheckCircle, faTimesCircle } from \"@fortawesome/free-regular-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const {\n    status,\n    data,\n    fetchingDataHandler,\n    error,\n    setAgainHandler\n  } = useHttp();\n  const [back, setBack] = useState(false);\n  useEffect(() => {\n    // if(status === 'pending' || !error){\n    //   return;\n    // }\n    const time = setTimeout(() => {\n      setBack(false);\n      console.log(1);\n    }, 1000);\n    return () => {\n      clearTimeout(time);\n      setBack(true);\n      console.log(2);\n    };\n  }, [error, status]);\n  const {\n    isTouched: inputEmailIsTouched,\n    isValid: inputEmailIsValid,\n    valueInput: valueEmail,\n    inputIsTouchedHandler: inputEmailIsTouchedHandler,\n    changeInputHandler: changeEmailHandler,\n    resetInputHandler: resetEmailHandler\n  } = useInput(value => value.trim().includes(\"@\"));\n  const {\n    isTouched: passwordIsTouched,\n    isValid: passwordIsValid,\n    valueInput: valuePassword,\n    inputIsTouchedHandler: passwordIsTouchHandler,\n    changeInputHandler: setPasswordHandler,\n    resetInputHandler: resetPasswordHandler\n  } = useInput(value => value.trim().length >= 8);\n  const {\n    isTouched: nameIsTouched,\n    isValid: nameIsValid,\n    valueInput: valueName,\n    inputIsTouchedHandler: nameIsTouchedHandler,\n    changeInputHandler: changeNameHandler,\n    resetInputHandler: resetNameHandler\n  } = useInput(value => value.trim().length > 0);\n\n  const submitHandler = event => {\n    setAgainHandler();\n    event.preventDefault();\n\n    if (!nameIsValid || !inputEmailIsValid || !passwordIsValid) {\n      return;\n    }\n\n    const information = {\n      email: valueEmail,\n      password: valuePassword,\n      name: valueName\n    };\n    fetchingDataHandler({\n      url: \"http://localhost:3001/register\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: information\n    });\n    resetEmailHandler();\n    resetPasswordHandler();\n    resetNameHandler();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Layout, {\n      title: \"\\u0110\\u0103ng K\\xFD\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            sm: 12,\n            md: 6,\n            lg: 6,\n            className: styles.col,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              onBlur: inputEmailIsTouchedHandler,\n              onChange: changeEmailHandler,\n              value: valueEmail,\n              type: \"text\",\n              id: \"email\",\n              placeholder: \"Email...\",\n              className: `${!inputEmailIsValid && inputEmailIsTouched && \"Mui-error\"}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), !inputEmailIsValid && inputEmailIsTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Email kh\\xF4ng h\\u1EE3p l\\u1EC7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"M\\u1EADt kh\\u1EA9u\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              onBlur: passwordIsTouchHandler,\n              value: valuePassword,\n              onChange: setPasswordHandler,\n              type: \"password\",\n              id: \"password\",\n              placeholder: \"Password...\",\n              className: `${!passwordIsValid && passwordIsTouched && \"Mui-error\"}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), !passwordIsValid && passwordIsTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"M\\u1EADt kh\\u1EA9u kh\\xF4ng h\\u1EE3p l\\u1EC7 (\\xEDt nh\\u1EA5t 8 k\\xFD t\\u1EF1)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            sm: 12,\n            md: 6,\n            lg: 6,\n            className: styles.col,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"T\\xEAn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              onBlur: nameIsTouchedHandler,\n              value: valueName,\n              onChange: changeNameHandler,\n              type: \"text\",\n              id: \"name\",\n              placeholder: \"T\\xEAn...\",\n              className: `${!nameIsValid && nameIsTouched && \"Mui-error\"}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), !nameIsValid && nameIsTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"T\\xEAn kh\\xF4ng \\u0111\\u01B0\\u1EE3c \\u0111\\u1EC3 tr\\u1ED1ng\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.btn,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            disabled: !nameIsValid || !inputEmailIsValid || !passwordIsValid,\n            type: \"submit\",\n            variant: \"contained\",\n            children: \"\\u0110\\u0103ng K\\xFD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Success, {\n          className: styles[\"success__note\"],\n          children: \"Dang ki thanh cong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.error,\n            children: \"Email c\\u1EE7a b\\u1EA1n \\u0111\\xE3 \\u0111\\u01B0\\u1EE3c s\\u1EED d\\u1EE5ng, vui l\\xF2ng nh\\u1EADp email kh\\xE1c!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Success, {\n            className: setBack\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), data && status === \"completed\" && /*#__PURE__*/_jsxDEV(Success, {\n          className: styles[\"success__note\"],\n          children: \"\\u0110\\u0103ng k\\xFD th\\xE0nh c\\xF4ng\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), status === \"pending\" && /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(Loading, {\n      className: styles.loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }, this), document.getElementById(\"overlay\"))]\n  }, void 0, true);\n};\n\n_s(Register, \"dLES1iZccW6T+yfOIOiyOU5tVMg=\", false, function () {\n  return [useHttp, useInput, useInput, useInput];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/hoanganh0722/Desktop/Web/gstorevn/src/components/Dashboard/Register/Register.js"],"names":["React","useEffect","useState","Layout","Row","Col","Input","Button","styles","useInput","useHttp","Loading","ReactDOM","Success","faCheckCircle","faTimesCircle","Register","status","data","fetchingDataHandler","error","setAgainHandler","back","setBack","time","setTimeout","console","log","clearTimeout","isTouched","inputEmailIsTouched","isValid","inputEmailIsValid","valueInput","valueEmail","inputIsTouchedHandler","inputEmailIsTouchedHandler","changeInputHandler","changeEmailHandler","resetInputHandler","resetEmailHandler","value","trim","includes","passwordIsTouched","passwordIsValid","valuePassword","passwordIsTouchHandler","setPasswordHandler","resetPasswordHandler","length","nameIsTouched","nameIsValid","valueName","nameIsTouchedHandler","changeNameHandler","resetNameHandler","submitHandler","event","preventDefault","information","email","password","name","url","method","headers","body","col","btn","createPortal","loading","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Layout from \"../Layout/Layout\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { Input, Button } from \"@material-ui/core\";\nimport styles from \"./Register.module.scss\";\nimport useInput from \"../../hook/use-input\";\nimport useHttp from \"../../hook/use-http\";\nimport Loading from \"../../../UI/Loading/Loading\";\nimport ReactDOM from \"react-dom\";\nimport Success from \"../BlogDashboard/SuccessMessage/Success\";\nimport {\n  faCheckCircle,\n  faTimesCircle,\n} from \"@fortawesome/free-regular-svg-icons\";\nconst Register = () => {\n  const { status, data, fetchingDataHandler, error, setAgainHandler } =\n    useHttp();\n  const [back, setBack] = useState(false);\n  useEffect(() => {\n    // if(status === 'pending' || !error){\n    //   return;\n    // }\n    const time = setTimeout(() => {\n      setBack(false);\n      console.log(1);\n    }, 1000);\n\n    return () => {\n      clearTimeout(time);\n      setBack(true);\n      console.log(2);\n    };\n  }, [error, status]);\n  const {\n    isTouched: inputEmailIsTouched,\n    isValid: inputEmailIsValid,\n    valueInput: valueEmail,\n    inputIsTouchedHandler: inputEmailIsTouchedHandler,\n    changeInputHandler: changeEmailHandler,\n    resetInputHandler: resetEmailHandler,\n  } = useInput((value) => value.trim().includes(\"@\"));\n  const {\n    isTouched: passwordIsTouched,\n    isValid: passwordIsValid,\n    valueInput: valuePassword,\n    inputIsTouchedHandler: passwordIsTouchHandler,\n    changeInputHandler: setPasswordHandler,\n    resetInputHandler: resetPasswordHandler,\n  } = useInput((value) => value.trim().length >= 8);\n  const {\n    isTouched: nameIsTouched,\n    isValid: nameIsValid,\n    valueInput: valueName,\n    inputIsTouchedHandler: nameIsTouchedHandler,\n    changeInputHandler: changeNameHandler,\n    resetInputHandler: resetNameHandler,\n  } = useInput((value) => value.trim().length > 0);\n  const submitHandler = (event) => {\n    setAgainHandler();\n    event.preventDefault();\n    if (!nameIsValid || !inputEmailIsValid || !passwordIsValid) {\n      return;\n    }\n    const information = {\n      email: valueEmail,\n      password: valuePassword,\n      name: valueName,\n    };\n    fetchingDataHandler({\n      url: \"http://localhost:3001/register\",\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: information,\n    });\n    resetEmailHandler();\n    resetPasswordHandler();\n    resetNameHandler();\n  };\n  return (\n    <>\n      <Layout title=\"Đăng Ký\">\n        <form onSubmit={submitHandler}>\n          <Row>\n            <Col xs={12} sm={12} md={6} lg={6} className={styles.col}>\n              <label htmlFor=\"email\">Email</label>\n              <Input\n                onBlur={inputEmailIsTouchedHandler}\n                onChange={changeEmailHandler}\n                value={valueEmail}\n                type=\"text\"\n                id=\"email\"\n                placeholder=\"Email...\"\n                className={`${\n                  !inputEmailIsValid && inputEmailIsTouched && \"Mui-error\"\n                }`}\n              />\n              {!inputEmailIsValid && inputEmailIsTouched && (\n                <p>Email không hợp lệ</p>\n              )}\n              <label htmlFor=\"password\">Mật khẩu</label>\n              <Input\n                onBlur={passwordIsTouchHandler}\n                value={valuePassword}\n                onChange={setPasswordHandler}\n                type=\"password\"\n                id=\"password\"\n                placeholder=\"Password...\"\n                className={`${\n                  !passwordIsValid && passwordIsTouched && \"Mui-error\"\n                }`}\n              />\n              {!passwordIsValid && passwordIsTouched && (\n                <p>Mật khẩu không hợp lệ (ít nhất 8 ký tự)</p>\n              )}\n            </Col>\n            <Col xs={12} sm={12} md={6} lg={6} className={styles.col}>\n              <label htmlFor=\"name\">Tên</label>\n              <Input\n                onBlur={nameIsTouchedHandler}\n                value={valueName}\n                onChange={changeNameHandler}\n                type=\"text\"\n                id=\"name\"\n                placeholder=\"Tên...\"\n                className={`${!nameIsValid && nameIsTouched && \"Mui-error\"}`}\n              />\n              {!nameIsValid && nameIsTouched && <p>Tên không được để trống</p>}\n            </Col>\n          </Row>\n          <div className={styles.btn}>\n            <Button\n              disabled={!nameIsValid || !inputEmailIsValid || !passwordIsValid}\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Đăng Ký\n            </Button>\n          </div>\n          <Success className={styles[\"success__note\"]}>\n            Dang ki thanh cong\n          </Success>\n          {error && (\n            <>\n              <p className={styles.error}>\n                Email của bạn đã được sử dụng, vui lòng nhập email khác!\n              </p>\n              <Success className={setBack}></Success>\n            </>\n          )}\n          {data && status === \"completed\" && (\n            <Success className={styles[\"success__note\"]}>\n              Đăng ký thành công\n            </Success>\n          )}\n        </form>\n      </Layout>\n      {status === \"pending\" &&\n        ReactDOM.createPortal(\n          <Loading className={styles.loading} />,\n          document.getElementById(\"overlay\")\n        )}\n    </>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}