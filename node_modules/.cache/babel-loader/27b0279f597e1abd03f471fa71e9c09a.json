{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  status: \"pending\",\n  posts: [],\n  error: null\n};\nconst postsSlice = createSlice({\n  name: \"get-posts\",\n  initialState: initialState,\n  reducers: {\n    getAllPostsHandler(state, action) {\n      state.posts = action.payload;\n      state.status = \"completed\";\n    },\n\n    errorHandler(state, action) {\n      state.error = action.payload;\n    },\n\n    pendingHandler(state) {\n      state.status = \"pending\";\n    },\n\n    finishedHandler(state) {\n      state.status = \"completed\";\n    }\n\n  }\n});\nexport const fetchingPosts = () => {\n  return dispatch => {\n    dispatch(postsActions.pendingHandler());\n    fetch(\"http://localhost:3001/get-all-posts\").then(response => response.json()).then(data => {\n      dispatch(postsActions.getAllPostsHandler(data));\n    }).catch(err => dispatch(postsActions.errorHandler(err)));\n    dispatch(postsActions.finishedHandler());\n  };\n};\nexport const postsActions = postsSlice.actions;\nexport default postsSlice;","map":{"version":3,"sources":["/Users/hoanganh0722/Desktop/Web/gstorevn/src/components/redux-store/get-posts.js"],"names":["createSlice","initialState","status","posts","error","postsSlice","name","reducers","getAllPostsHandler","state","action","payload","errorHandler","pendingHandler","finishedHandler","fetchingPosts","dispatch","postsActions","fetch","then","response","json","data","catch","err","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,SADW;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,MAAMC,UAAU,GAAGL,WAAW,CAAC;AAC7BM,EAAAA,IAAI,EAAE,WADuB;AAE7BL,EAAAA,YAAY,EAAEA,YAFe;AAG7BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,kBAAkB,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAChCD,MAAAA,KAAK,CAACN,KAAN,GAAcO,MAAM,CAACC,OAArB;AACEF,MAAAA,KAAK,CAACP,MAAN,GAAe,WAAf;AACH,KAJO;;AAKRU,IAAAA,YAAY,CAACH,KAAD,EAAQC,MAAR,EAAgB;AAC1BD,MAAAA,KAAK,CAACL,KAAN,GAAcM,MAAM,CAACC,OAArB;AACD,KAPO;;AAQRE,IAAAA,cAAc,CAACJ,KAAD,EAAQ;AACpBA,MAAAA,KAAK,CAACP,MAAN,GAAe,SAAf;AACD,KAVO;;AAWRY,IAAAA,eAAe,CAACL,KAAD,EAAQ;AACrBA,MAAAA,KAAK,CAACP,MAAN,GAAe,WAAf;AACD;;AAbO;AAHmB,CAAD,CAA9B;AAoBA,OAAO,MAAMa,aAAa,GAAG,MAAM;AACjC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACC,YAAY,CAACJ,cAAb,EAAD,CAAR;AACAK,IAAAA,KAAK,CAAC,qCAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdN,MAAAA,QAAQ,CAACC,YAAY,CAACT,kBAAb,CAAgCc,IAAhC,CAAD,CAAR;AACD,KAJH,EAKGC,KALH,CAKUC,GAAD,IAASR,QAAQ,CAACC,YAAY,CAACL,YAAb,CAA0BY,GAA1B,CAAD,CAL1B;AAMAR,IAAAA,QAAQ,CAACC,YAAY,CAACH,eAAb,EAAD,CAAR;AACD,GATD;AAUD,CAXM;AAaP,OAAO,MAAMG,YAAY,GAAGZ,UAAU,CAACoB,OAAhC;AACP,eAAepB,UAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  status: \"pending\",\n  posts: [],\n  error: null,\n};\n\nconst postsSlice = createSlice({\n  name: \"get-posts\",\n  initialState: initialState,\n  reducers: {\n    getAllPostsHandler(state, action) {\n      state.posts = action.payload;\n        state.status = \"completed\";\n    },\n    errorHandler(state, action) {\n      state.error = action.payload;\n    },\n    pendingHandler(state) {\n      state.status = \"pending\";\n    },\n    finishedHandler(state) {\n      state.status = \"completed\";\n    },\n  },\n});\n\nexport const fetchingPosts = () => {\n  return (dispatch) => {\n    dispatch(postsActions.pendingHandler());\n    fetch(\"http://localhost:3001/get-all-posts\")\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch(postsActions.getAllPostsHandler(data));\n      })\n      .catch((err) => dispatch(postsActions.errorHandler(err)));\n    dispatch(postsActions.finishedHandler());\n  };\n};\n\nexport const postsActions = postsSlice.actions;\nexport default postsSlice;\n"]},"metadata":{},"sourceType":"module"}