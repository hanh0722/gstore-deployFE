{"ast":null,"code":"var _jsxFileName = \"/Users/hoanganh0722/Desktop/Web/gstorevn/src/components/Dashboard/UserDetail/UserDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"../Layout/Layout\";\nimport Input from \"../UI/Input/Input\";\nimport styles from \"./UserDetail.module.scss\";\nimport { Row, Col } from \"react-bootstrap\";\nimport ToggleButton from \"../ChangingPost/UI/ToggleButton/ToggleButton\";\nimport { Button } from \"@material-ui/core\";\nimport Container from \"../container/Container\";\nimport Badge from \"../Badge/Badge\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport Loading from \"../../../UI/Loading/Loading\";\nimport { userActions } from \"../../redux-store/change-user\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Notification from \"./Notification\";\nimport useHttp from \"../../hook/use-http\";\nimport OverlayPortals from \"../../Overlay/OverlayPortal\";\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserDetail = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user.user);\n  const status = useSelector(state => state.user.status);\n  const newPassword = useSelector(state => state.user.newPassword);\n  const params = useParams();\n  const [isTouched, setIsTouched] = useState(false);\n  const [nameIsTouched, setNameIsTouched] = useState(false);\n  const [successFetching, setSuccessFetching] = useState(false);\n  const {\n    fetchingDataHandler,\n    status: statusUploading,\n    data: dataUploading,\n    error\n  } = useHttp();\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        dispatch(userActions.loadingFetching());\n        const response = await fetch(`http://localhost:3001/api/get-user/${params.username}`);\n\n        if (!response.ok) {\n          throw new Error(\"failed to fetch\");\n        }\n\n        const dataUser = await response.json();\n        dispatch(userActions.getInformation(dataUser));\n      } catch (err) {\n        dispatch(userActions.errorFetching());\n      }\n    };\n\n    fetchUser();\n  }, [params.username, dispatch]);\n\n  const changeNameHandler = event => {\n    dispatch(userActions.changeNameHandler(event.target.value));\n  };\n\n  const changePasswordHandler = event => {\n    dispatch(userActions.newPasswordHandler(event.target.value));\n  };\n\n  const touchedPasswordHandler = () => {\n    setIsTouched(true);\n  };\n\n  const nameIsTouchedHandler = () => {\n    setNameIsTouched(true);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    fetchingDataHandler({\n      url: 'http://localhost:3001/api/update-user',\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: {\n        username: user.username,\n        newPassword: newPassword,\n        name: user.name,\n        islocked: user.islocked\n      }\n    });\n    setIsTouched(false);\n    setNameIsTouched(false);\n  };\n\n  let valid = false;\n\n  if (user && user.name.length > 0 && newPassword && newPassword.trim().length >= 8) {\n    valid = true;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"Ch\\u1EC9nh S\\u1EEDa Ng\\u01B0\\u1EDDi D\\xF9ng\",\n    children: [status === \"pending\" && /*#__PURE__*/_jsxDEV(Loading, {\n      className: styles.loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 32\n    }, this), status === \"error\" && !user && /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/404\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 39\n    }, this), status === \"success\" && user && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          sm: 12,\n          md: 8,\n          lg: 8,\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              className: styles.input,\n              label: \"Email\",\n              input: {\n                type: \"email\",\n                required: true,\n                id: \"email\",\n                value: user.username,\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              className: styles.input,\n              label: \"T\\xEAn ng\\u01B0\\u1EDDi d\\xF9ng\",\n              input: {\n                type: \"text\",\n                required: true,\n                id: \"name\",\n                max: \"100\",\n                value: user.name,\n                onChange: changeNameHandler,\n                onBlur: nameIsTouchedHandler\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), nameIsTouched && user.name.trim().length <= 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.invalid,\n              children: \"T\\xEAn kh\\xF4ng \\u0111\\u01B0\\u1EE3c \\u0111\\u1EC3 tr\\u1ED1ng\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 67\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              className: styles.input,\n              label: \"M\\u1EADt kh\\u1EA9u m\\u1EDBi\",\n              input: {\n                type: \"password\",\n                id: \"password\",\n                min: \"8\",\n                onChange: changePasswordHandler,\n                onBlur: touchedPasswordHandler,\n                placeholder: 'Nhập mật khẩu mới (Nhập mật khẩu cũ nếu không thay đổi)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this), isTouched && (!newPassword || newPassword.trim().length < 8) && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.invalid,\n              children: \"M\\u1EADt kh\\u1EA9u ph\\u1EA3i c\\xF3 \\xEDt nh\\u1EA5t 8 k\\xFD t\\u1EF1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: styles.col,\n          xs: 12,\n          sm: 12,\n          md: 4,\n          lg: 4,\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontWeight: \"bold\"\n              },\n              children: \"Tr\\u1EA1ng th\\xE1i t\\xE0i kho\\u1EA3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles[\"row__lock\"],\n              children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n                changeStatusHandler: () => dispatch(userActions.lockAccount()),\n                isClicked: user.islocked\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                isLocked: user.islocked\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              disabled: !valid,\n              className: `${styles[\"btn__submit\"]} ${!valid && styles[\"invalid-btn\"]}`,\n              variant: \"contained\",\n              type: \"submit\",\n              children: \"X\\xE1c nh\\u1EADn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), statusUploading === 'pending' && /*#__PURE__*/_jsxDEV(Loading, {\n        className: styles['loading-upload']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 45\n      }, this), statusUploading === 'completed' && dataUploading && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(OverlayPortals, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 36\n        }, this), document.getElementById('overlay')), /*#__PURE__*/_jsxDEV(Notification, {\n          status: statusUploading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), statusUploading === 'error' && !dataUploading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"C\\xF3 l\\u1ED7i x\\u1EA3y ra, xin th\\u1EED l\\u1EA1i sau\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 61\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserDetail, \"VUwXsjAU27+ZC+LKKVTd1ksnjfo=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useParams, useHttp];\n});\n\n_c = UserDetail;\nexport default UserDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserDetail\");","map":{"version":3,"sources":["/Users/hoanganh0722/Desktop/Web/gstorevn/src/components/Dashboard/UserDetail/UserDetail.js"],"names":["React","useEffect","useState","Layout","Input","styles","Row","Col","ToggleButton","Button","Container","Badge","Redirect","useParams","Loading","userActions","useDispatch","useSelector","Notification","useHttp","OverlayPortals","ReactDOM","UserDetail","dispatch","user","state","status","newPassword","params","isTouched","setIsTouched","nameIsTouched","setNameIsTouched","successFetching","setSuccessFetching","fetchingDataHandler","statusUploading","data","dataUploading","error","fetchUser","loadingFetching","response","fetch","username","ok","Error","dataUser","json","getInformation","err","errorFetching","changeNameHandler","event","target","value","changePasswordHandler","newPasswordHandler","touchedPasswordHandler","nameIsTouchedHandler","submitHandler","preventDefault","url","method","headers","body","name","islocked","valid","length","trim","loading","input","type","required","id","readOnly","max","onChange","onBlur","invalid","min","placeholder","col","fontWeight","lockAccount","createPortal","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Layout from \"../Layout/Layout\";\nimport Input from \"../UI/Input/Input\";\nimport styles from \"./UserDetail.module.scss\";\nimport { Row, Col } from \"react-bootstrap\";\nimport ToggleButton from \"../ChangingPost/UI/ToggleButton/ToggleButton\";\nimport { Button } from \"@material-ui/core\";\nimport Container from \"../container/Container\";\nimport Badge from \"../Badge/Badge\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport Loading from \"../../../UI/Loading/Loading\";\nimport { userActions } from \"../../redux-store/change-user\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Notification from \"./Notification\";\nimport useHttp from \"../../hook/use-http\";\nimport OverlayPortals from \"../../Overlay/OverlayPortal\";\nimport ReactDOM from 'react-dom';\nconst UserDetail = () => {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user.user);\n  const status = useSelector((state) => state.user.status);\n  const newPassword = useSelector((state) => state.user.newPassword);\n  const params = useParams();\n  const [isTouched, setIsTouched] = useState(false);\n  const [nameIsTouched, setNameIsTouched] = useState(false);\n  const [successFetching, setSuccessFetching] = useState(false);\n  const {fetchingDataHandler, status: statusUploading, data: dataUploading, error} = useHttp();\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        dispatch(userActions.loadingFetching());\n        const response = await fetch(\n          `http://localhost:3001/api/get-user/${params.username}`\n        );\n        if (!response.ok) {\n          throw new Error(\"failed to fetch\");\n        }\n        const dataUser = await response.json();\n        dispatch(userActions.getInformation(dataUser));\n      } catch (err) {\n        dispatch(userActions.errorFetching());\n      }\n    };\n    fetchUser();\n  }, [params.username, dispatch]);\n  const changeNameHandler = (event) => {\n    dispatch(userActions.changeNameHandler(event.target.value));\n  };\n  const changePasswordHandler = (event) => {\n    dispatch(userActions.newPasswordHandler(event.target.value));\n  };\n  const touchedPasswordHandler = () => {\n    setIsTouched(true);\n  };\n  const nameIsTouchedHandler = () =>{\n    setNameIsTouched(true);\n  }\n  const submitHandler = (event) => {\n    event.preventDefault();\n    fetchingDataHandler({\n        url: 'http://localhost:3001/api/update-user',\n        method: 'PUT',\n        headers: {'Content-Type': 'application/json'},\n        body: {\n            username: user.username,\n            newPassword: newPassword,\n            name: user.name,\n            islocked: user.islocked\n        }\n    })\n    setIsTouched(false);\n    setNameIsTouched(false);\n  };\n  let valid = false;\n  if (\n    user &&\n    user.name.length > 0 &&\n    newPassword &&\n    newPassword.trim().length >= 8\n  ) {\n    valid = true;\n  }\n  return (\n    <Layout title=\"Chỉnh Sửa Người Dùng\">\n      {status === \"pending\" && <Loading className={styles.loading} />}\n      {status === \"error\" && !user && <Redirect to=\"/404\" />}\n      {status === \"success\" && user && (\n        <form onSubmit={submitHandler}>\n          <Row>\n            <Col xs={12} sm={12} md={8} lg={8}>\n              <Container>\n                <Input\n                  className={styles.input}\n                  label=\"Email\"\n                  input={{\n                    type: \"email\",\n                    required: true,\n                    id: \"email\",\n                    value: user.username,\n                    readOnly: true,\n                  }}\n                />\n                <Input\n                  className={styles.input}\n                  label=\"Tên người dùng\"\n                  input={{\n                    type: \"text\",\n                    required: true,\n                    id: \"name\",\n                    max: \"100\",\n                    value: user.name,\n                    onChange: changeNameHandler,\n                    onBlur: nameIsTouchedHandler\n                  }}\n                />\n                {nameIsTouched && user.name.trim().length <= 0 && <p className={styles.invalid}>Tên không được để trống</p>}\n                <Input\n                  className={styles.input}\n                  label=\"Mật khẩu mới\"\n                  input={{\n                    type: \"password\",\n                    id: \"password\",\n                    min: \"8\",\n                    onChange: changePasswordHandler,\n                    onBlur: touchedPasswordHandler,\n                    placeholder: 'Nhập mật khẩu mới (Nhập mật khẩu cũ nếu không thay đổi)'\n                  }}\n                />\n                {isTouched &&\n                  (!newPassword || newPassword.trim().length < 8) && (\n                    <p className={styles.invalid}>\n                      Mật khẩu phải có ít nhất 8 ký tự\n                    </p>\n                  )}\n              </Container>\n            </Col>\n            <Col className={styles.col} xs={12} sm={12} md={4} lg={4}>\n              <Container>\n                <p style={{ fontWeight: \"bold\" }}>Trạng thái tài khoản</p>\n                <div className={styles[\"row__lock\"]}>\n                  <ToggleButton\n                    changeStatusHandler={() =>\n                      dispatch(userActions.lockAccount())\n                    }\n                    isClicked={user.islocked}\n                  />\n                  <Badge isLocked={user.islocked} />\n                </div>\n                <Button\n                  disabled={!valid}\n                  className={`${styles[\"btn__submit\"]} ${\n                    !valid && styles[\"invalid-btn\"]\n                  }`}\n                  variant=\"contained\"\n                  type=\"submit\"\n                >\n                  Xác nhận\n                </Button>\n              </Container>\n            </Col>\n          </Row>\n          {statusUploading === 'pending' && <Loading className={styles['loading-upload']}/>}\n          {statusUploading === 'completed' && dataUploading && \n          <>\n            {ReactDOM.createPortal(<OverlayPortals/>, document.getElementById('overlay'))}\n            <Notification status={statusUploading}/>\n          </>}\n          {statusUploading === 'error' && !dataUploading && <p>Có lỗi xảy ra, xin thử lại sau</p>}\n        </form>\n      )}\n    </Layout>\n  );\n};\n\nexport default UserDetail;\n"]},"metadata":{},"sourceType":"module"}