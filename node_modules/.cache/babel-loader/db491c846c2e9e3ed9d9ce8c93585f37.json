{"ast":null,"code":"var _jsxFileName = \"/Users/hoanganh0722/Desktop/Web/gstorevn/src/components/Dashboard/ChangingPost/ChangingPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Layout from \"../Layout/Layout\";\nimport FieldSet from \"./UI/FieldSet\";\nimport { Col, Row } from \"react-bootstrap\";\nimport Submit from \"./UI/Submit/Submit\";\nimport Container from \"../container/Container\";\nimport Loading from \"../../../UI/Loading/Loading\";\nimport styles from \"./ChangingPost.module.scss\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChangingPost = () => {\n  _s();\n\n  const [newImagesUploading, setNewImagesUploading] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const information = useSelector(state => state.post.information);\n\n  const submitHandler = async event => {\n    event.preventDefault();\n\n    if (newImagesUploading.length !== 0) {\n      const formData = new FormData();\n      newImagesUploading.forEach(items => {\n        formData.append(\"photos\", items);\n      });\n      setLoading(true);\n\n      try {\n        const response = await fetch(`http://localhost:3001/api/images/${information.id}`, {\n          method: \"POST\",\n          body: formData // headers: {'Content-Type': 'multipart/form-data'}\n\n        });\n\n        if (!response.ok) {\n          throw new Error(\"error\");\n        }\n\n        const dataItems = await response.json();\n        console.log(dataItems);\n      } catch (err) {\n        setError(true);\n        setLoading(false);\n        return;\n      }\n\n      try {\n        const response = await fetch('http://localhost:3001/api/upload', {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(information)\n        });\n\n        if (!response.ok) {\n          throw new Error('error');\n        }\n\n        const data = await response.json();\n      } catch (err) {\n        setError(true);\n      }\n\n      setLoading(false);\n    }\n  };\n\n  const setNewImages = items => {\n    setNewImagesUploading(items);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(Loading, {\n      className: styles.loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      title: \"Ch\\u1EC9nh S\\u1EEDa B\\xE0i Vi\\u1EBFt\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            sm: 12,\n            md: 12,\n            lg: 8,\n            children: /*#__PURE__*/_jsxDEV(Container, {\n              children: /*#__PURE__*/_jsxDEV(FieldSet, {\n                setNewImages: setNewImages\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            sm: 12,\n            md: 12,\n            lg: 4,\n            children: /*#__PURE__*/_jsxDEV(Container, {\n              children: /*#__PURE__*/_jsxDEV(Submit, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), error && !loading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"H\\xE3y \\u0111i\\u1EC1n \\u0111\\u1EA7y \\u0111\\u1EE7 th\\xF4ng tin tr\\u01B0\\u1EDBc khi \\u0111\\u0103ng b\\xE0i!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ChangingPost, \"cp4zuSsg4eSnuMaRlCwfsgIpZoA=\", false, function () {\n  return [useSelector];\n});\n\n_c = ChangingPost;\nexport default ChangingPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangingPost\");","map":{"version":3,"sources":["/Users/hoanganh0722/Desktop/Web/gstorevn/src/components/Dashboard/ChangingPost/ChangingPost.js"],"names":["React","useState","Layout","FieldSet","Col","Row","Submit","Container","Loading","styles","useSelector","ChangingPost","newImagesUploading","setNewImagesUploading","loading","setLoading","error","setError","information","state","post","submitHandler","event","preventDefault","length","formData","FormData","forEach","items","append","response","fetch","id","method","body","ok","Error","dataItems","json","console","log","err","headers","JSON","stringify","data","setNewImages"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Layout from \"../Layout/Layout\";\nimport FieldSet from \"./UI/FieldSet\";\nimport { Col, Row } from \"react-bootstrap\";\nimport Submit from \"./UI/Submit/Submit\";\nimport Container from \"../container/Container\";\nimport Loading from \"../../../UI/Loading/Loading\";\nimport styles from \"./ChangingPost.module.scss\";\nimport {useSelector} from \"react-redux\";\nconst ChangingPost = () => {\n  const [newImagesUploading, setNewImagesUploading] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const information = useSelector((state) => state.post.information);\n  const submitHandler = async (event) => {\n    event.preventDefault();\n    if (newImagesUploading.length !== 0) {\n      const formData = new FormData();\n      newImagesUploading.forEach((items) => {\n        formData.append(\"photos\", items);\n      });\n      setLoading(true);\n      try {\n        const response = await fetch(`http://localhost:3001/api/images/${information.id}`, {\n          method: \"POST\",\n          body: formData,\n          // headers: {'Content-Type': 'multipart/form-data'}\n        });\n        if (!response.ok) {\n          throw new Error(\"error\");\n        }\n        const dataItems = await response.json();\n        console.log(dataItems);\n      } catch (err) {\n        setError(true);\n        setLoading(false);\n        return;\n      }\n      try{\n        const response = await fetch('http://localhost:3001/api/upload', {\n          method: 'PUT',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify(information)\n        })\n        if(!response.ok){\n          throw new Error('error');\n        }\n        const data = await response.json();\n      }catch(err){\n        setError(true);\n      }\n      setLoading(false);\n    }\n  };\n  const setNewImages = (items) => {\n    setNewImagesUploading(items);\n  };\n  return (\n    <>\n      {loading && <Loading className={styles.loading} />}\n      <Layout title=\"Chỉnh Sửa Bài Viết\">\n        <form onSubmit={submitHandler}>\n          <Row>\n            <Col xs={12} sm={12} md={12} lg={8}>\n              <Container>\n                <FieldSet setNewImages={setNewImages} />\n              </Container>\n            </Col>\n            <Col xs={12} sm={12} md={12} lg={4}>\n              <Container>\n                <Submit />\n              </Container>\n            </Col>\n          </Row>\n          {error && !loading && <p>Hãy điền đầy đủ thông tin trước khi đăng bài!</p>}\n        </form>\n      </Layout>\n    </>\n  );\n};\n\nexport default ChangingPost;\n"]},"metadata":{},"sourceType":"module"}