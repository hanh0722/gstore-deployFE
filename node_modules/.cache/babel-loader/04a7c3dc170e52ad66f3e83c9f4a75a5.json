{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  status: \"pending\",\n  posts: [],\n  error: null\n};\nconst postsSlice = createSlice({\n  name: \"get-posts\",\n  initialState: initialState,\n  reducers: {\n    getAllPostsHandler(state, action) {\n      state.posts = action.payload, state.status = \"completed\";\n    },\n\n    errorHandler(state, action) {\n      state.error = action.payload;\n    },\n\n    pendingHandler(state) {\n      state.status = \"pending\";\n    }\n\n  }\n});\nexport const postsActions = postsSlice.actions;\nexport const fetchingPosts = () => {\n  return async dispatch => {\n    dispatch(postsActions.pendingHandler());\n\n    try {\n      const response = await fetch(\"http://localhost:3001/get-all-posts\");\n\n      if (!response.ok) {\n        throw new Error(\"error!\");\n      }\n\n      const data = await response.json();\n    } catch (err) {}\n  };\n};\nexport default postsSlice;","map":{"version":3,"sources":["/Users/hoanganh0722/Desktop/Web/gstorevn/src/components/redux-store/get-posts.js"],"names":["createSlice","initialState","status","posts","error","postsSlice","name","reducers","getAllPostsHandler","state","action","payload","errorHandler","pendingHandler","postsActions","actions","fetchingPosts","dispatch","response","fetch","ok","Error","data","json","err"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,SADW;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,MAAMC,UAAU,GAAGL,WAAW,CAAC;AAC7BM,EAAAA,IAAI,EAAE,WADuB;AAE7BL,EAAAA,YAAY,EAAEA,YAFe;AAG7BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,kBAAkB,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC/BD,MAAAA,KAAK,CAACN,KAAN,GAAcO,MAAM,CAACC,OAAtB,EAAiCF,KAAK,CAACP,MAAN,GAAe,WAAhD;AACD,KAHO;;AAIRU,IAAAA,YAAY,CAACH,KAAD,EAAQC,MAAR,EAAgB;AAC1BD,MAAAA,KAAK,CAACL,KAAN,GAAcM,MAAM,CAACC,OAArB;AACD,KANO;;AAORE,IAAAA,cAAc,CAACJ,KAAD,EAAQ;AACpBA,MAAAA,KAAK,CAACP,MAAN,GAAe,SAAf;AACD;;AATO;AAHmB,CAAD,CAA9B;AAgBA,OAAO,MAAMY,YAAY,GAAGT,UAAU,CAACU,OAAhC;AAEP,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,SAAO,MAAOC,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAACH,YAAY,CAACD,cAAb,EAAD,CAAR;;AACA,QAAI;AACF,YAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAD,CAA5B;;AACA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,QAAV,CAAN;AACD;;AACD,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AAED,KAPD,CAOE,OAAOC,GAAP,EAAY,CAEb;AACF,GAZD;AAaD,CAdM;AAeP,eAAenB,UAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  status: \"pending\",\n  posts: [],\n  error: null,\n};\n\nconst postsSlice = createSlice({\n  name: \"get-posts\",\n  initialState: initialState,\n  reducers: {\n    getAllPostsHandler(state, action) {\n      (state.posts = action.payload), (state.status = \"completed\");\n    },\n    errorHandler(state, action) {\n      state.error = action.payload;\n    },\n    pendingHandler(state) {\n      state.status = \"pending\";\n    },\n  },\n});\n\nexport const postsActions = postsSlice.actions;\n\nexport const fetchingPosts = () => {\n  return async (dispatch) => {\n    dispatch(postsActions.pendingHandler());\n    try {\n      const response = await fetch(\"http://localhost:3001/get-all-posts\");\n      if (!response.ok) {\n        throw new Error(\"error!\");\n      }\n      const data = await response.json();\n      \n    } catch (err) {\n\n    }\n  };\n};\nexport default postsSlice;\n"]},"metadata":{},"sourceType":"module"}