{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  status: \"pending\",\n  posts: [],\n  error: null\n};\nconst postsSlice = createSlice({\n  name: \"get-posts\",\n  initialState: initialState,\n  reducers: {\n    getAllPostsHandler(state, action) {\n      state.posts = action.payload, state.status = \"completed\";\n    },\n\n    errorHandler(state, action) {\n      state.error = action.payload;\n    },\n\n    pendingHandler(state) {\n      state.status = \"pending\";\n    }\n\n  }\n});\nexport const postsActions = postsSlice.actions;\nexport const fetchingPosts = () => {\n  return dispatch => {\n    dispatch(postsActions.pendingHandler());\n    fetch('http://localhost:3001/get-all-posts').then(response => response.json()).then(data => {\n      dispatch(postsActions.getAllPostsHandler(data));\n    }).catch(err => dispatch(postsActions.errorHandler(err)));\n  };\n};\nexport default postsSlice;","map":{"version":3,"sources":["/Users/hoanganh0722/Desktop/Web/gstorevn/src/components/redux-store/get-posts.js"],"names":["createSlice","initialState","status","posts","error","postsSlice","name","reducers","getAllPostsHandler","state","action","payload","errorHandler","pendingHandler","postsActions","actions","fetchingPosts","dispatch","fetch","then","response","json","data","catch","err"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,SADW;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,MAAMC,UAAU,GAAGL,WAAW,CAAC;AAC7BM,EAAAA,IAAI,EAAE,WADuB;AAE7BL,EAAAA,YAAY,EAAEA,YAFe;AAG7BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,kBAAkB,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC/BD,MAAAA,KAAK,CAACN,KAAN,GAAcO,MAAM,CAACC,OAAtB,EAAiCF,KAAK,CAACP,MAAN,GAAe,WAAhD;AACD,KAHO;;AAIRU,IAAAA,YAAY,CAACH,KAAD,EAAQC,MAAR,EAAgB;AAC1BD,MAAAA,KAAK,CAACL,KAAN,GAAcM,MAAM,CAACC,OAArB;AACD,KANO;;AAORE,IAAAA,cAAc,CAACJ,KAAD,EAAQ;AACpBA,MAAAA,KAAK,CAACP,MAAN,GAAe,SAAf;AACD;;AATO;AAHmB,CAAD,CAA9B;AAgBA,OAAO,MAAMY,YAAY,GAAGT,UAAU,CAACU,OAAhC;AAEP,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,SAAQC,QAAD,IAAa;AAChBA,IAAAA,QAAQ,CAACH,YAAY,CAACD,cAAb,EAAD,CAAR;AACAK,IAAAA,KAAK,CAAC,qCAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAG;AACTL,MAAAA,QAAQ,CAACH,YAAY,CAACN,kBAAb,CAAgCc,IAAhC,CAAD,CAAR;AACH,KAJD,EAIGC,KAJH,CAISC,GAAG,IAAIP,QAAQ,CAACH,YAAY,CAACF,YAAb,CAA0BY,GAA1B,CAAD,CAJxB;AAKH,GAPD;AAQD,CATM;AAUP,eAAenB,UAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  status: \"pending\",\n  posts: [],\n  error: null,\n};\n\nconst postsSlice = createSlice({\n  name: \"get-posts\",\n  initialState: initialState,\n  reducers: {\n    getAllPostsHandler(state, action) {\n      (state.posts = action.payload), (state.status = \"completed\");\n    },\n    errorHandler(state, action) {\n      state.error = action.payload;\n    },\n    pendingHandler(state) {\n      state.status = \"pending\";\n    },\n  },\n});\n\nexport const postsActions = postsSlice.actions;\n\nexport const fetchingPosts = () => {\n  return (dispatch) =>{\n      dispatch(postsActions.pendingHandler());\n      fetch('http://localhost:3001/get-all-posts')\n      .then(response => response.json())\n      .then(data =>{\n          dispatch(postsActions.getAllPostsHandler(data));\n      }).catch(err => dispatch(postsActions.errorHandler(err)))\n  }\n};\nexport default postsSlice;\n"]},"metadata":{},"sourceType":"module"}