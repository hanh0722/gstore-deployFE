{"ast":null,"code":"var _jsxFileName = \"/Users/hoanganh0722/Desktop/Web/gstorevn/src/components/Dashboard/UserDetail/UserDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Layout from \"../Layout/Layout\";\nimport Input from \"../UI/Input/Input\";\nimport styles from \"./UserDetail.module.scss\";\nimport { Row, Col } from \"react-bootstrap\";\nimport ToggleButton from \"../ChangingPost/UI/ToggleButton/ToggleButton\";\nimport { Button } from \"@material-ui/core\";\nimport Container from \"../container/Container\";\nimport Badge from \"../Badge/Badge\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport Loading from \"../../../UI/Loading/Loading\";\nimport { userActions } from \"../../redux-store/change-user\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserDetail = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user.user);\n  const status = useSelector(state => state.user.status);\n  const newPassword = useSelector(state => state.user.newPassword);\n  const params = useParams();\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        dispatch(userActions.loadingFetching());\n        const response = await fetch(`http://localhost:3001/api/get-user/${params.username}`);\n\n        if (!response.ok) {\n          throw new Error(\"failed to fetch\");\n        }\n\n        const dataUser = await response.json();\n        dispatch(userActions.getInformation(dataUser));\n      } catch (err) {\n        dispatch(userActions.errorFetching());\n      }\n    };\n\n    fetchUser();\n  }, [params.username, dispatch]);\n\n  const changeUserNameHandler = event => {\n    dispatch(userActions.changeUsername(event.target.value));\n  };\n\n  const changeEmailHandler = event => {\n    dispatch(userActions.changeEmailHandler(event.target.value));\n  };\n\n  const changePasswordHandler = event => {\n    dispatch(userActions.newPasswordHandler(event.target.value));\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    let data;\n\n    if (newPassword === null) {\n      data = user;\n    } else {\n      data = { ...user,\n        password: newPassword\n      };\n    }\n\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"Ch\\u1EC9nh S\\u1EEDa Ng\\u01B0\\u1EDDi D\\xF9ng\",\n    children: [status === \"pending\" && /*#__PURE__*/_jsxDEV(Loading, {\n      className: styles.loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 32\n    }, this), status === 'error' && !user && /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/404\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 39\n    }, this), status === \"success\" && user && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          sm: 12,\n          md: 8,\n          lg: 8,\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              className: styles.input,\n              label: \"T\\xEAn ng\\u01B0\\u1EDDi d\\xF9ng\",\n              input: {\n                type: \"text\",\n                required: true,\n                id: \"name\",\n                max: \"100\",\n                value: user.name,\n                onChange: changeUserNameHandler\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              className: styles.input,\n              label: \"Email\",\n              input: {\n                type: \"email\",\n                required: true,\n                id: \"email\",\n                value: user.username,\n                onChange: changeEmailHandler\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              className: styles.input,\n              label: \"M\\u1EADt kh\\u1EA9u m\\u1EDBi\",\n              input: {\n                type: \"password\",\n                id: \"password\",\n                require: true,\n                min: \"8\",\n                onChange: changePasswordHandler,\n                placeholder: \"Mật khẩu mới (Nhập mật khẩu cũ nếu không thay đổi)\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: styles.col,\n          xs: 12,\n          sm: 12,\n          md: 4,\n          lg: 4,\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              children: \"Tr\\u1EA1ng th\\xE1i t\\xE0i kho\\u1EA3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles[\"row__lock\"],\n              children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n                changeStatusHandler: () => dispatch(userActions.lockAccount()),\n                isClicked: user.islocked\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                isLocked: user.islocked\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: styles['btn__submit'],\n              variant: \"contained\",\n              type: \"submit\",\n              children: \"X\\xE1c nh\\u1EADn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserDetail, \"ScGY3T56Rj+Cdw4NxNoR8upVse4=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useParams];\n});\n\n_c = UserDetail;\nexport default UserDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserDetail\");","map":{"version":3,"sources":["/Users/hoanganh0722/Desktop/Web/gstorevn/src/components/Dashboard/UserDetail/UserDetail.js"],"names":["React","useEffect","Layout","Input","styles","Row","Col","ToggleButton","Button","Container","Badge","Redirect","useParams","Loading","userActions","useDispatch","useSelector","UserDetail","dispatch","user","state","status","newPassword","params","fetchUser","loadingFetching","response","fetch","username","ok","Error","dataUser","json","getInformation","err","errorFetching","changeUserNameHandler","event","changeUsername","target","value","changeEmailHandler","changePasswordHandler","newPasswordHandler","submitHandler","preventDefault","data","password","console","log","loading","input","type","required","id","max","name","onChange","require","min","placeholder","col","fontWeight","lockAccount","islocked"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport Layout from \"../Layout/Layout\";\nimport Input from \"../UI/Input/Input\";\nimport styles from \"./UserDetail.module.scss\";\nimport { Row, Col } from \"react-bootstrap\";\nimport ToggleButton from \"../ChangingPost/UI/ToggleButton/ToggleButton\";\nimport { Button } from \"@material-ui/core\";\nimport Container from \"../container/Container\";\nimport Badge from \"../Badge/Badge\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport Loading from \"../../../UI/Loading/Loading\";\nimport { userActions } from \"../../redux-store/change-user\";\nimport { useDispatch, useSelector } from \"react-redux\";\nconst UserDetail = () => {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user.user);\n  const status = useSelector((state) => state.user.status);\n  const newPassword = useSelector(state => state.user.newPassword);\n  const params = useParams();\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        dispatch(userActions.loadingFetching());\n        const response = await fetch(\n          `http://localhost:3001/api/get-user/${params.username}`\n        );\n        if (!response.ok) {\n          throw new Error(\"failed to fetch\");\n        }\n        const dataUser = await response.json();\n        dispatch(userActions.getInformation(dataUser));\n      } catch (err) {\n        dispatch(userActions.errorFetching());\n      }\n    };\n    fetchUser();\n  }, [params.username, dispatch]);\n  const changeUserNameHandler = (event) => {\n      dispatch(userActions.changeUsername(event.target.value));\n  };\n  const changeEmailHandler = (event) => {\n      dispatch(userActions.changeEmailHandler(event.target.value));\n  };\n  const changePasswordHandler = (event) => {\n    dispatch(userActions.newPasswordHandler(event.target.value));\n  };\n  const submitHandler = (event) =>{\n      event.preventDefault();\n      let data;\n      if(newPassword === null){\n          data = user;\n      }\n      else{\n          data = {...user, password: newPassword}\n      }\n      console.log(data);\n  }\n  return (\n    <Layout title=\"Chỉnh Sửa Người Dùng\">\n      {status === \"pending\" && <Loading className={styles.loading} />}\n      {status === 'error' && !user && <Redirect to='/404'/>}\n      {status === \"success\" && user && (\n        <form onSubmit={submitHandler}>\n          <Row>\n            <Col xs={12} sm={12} md={8} lg={8}>\n              <Container>\n                <Input\n                  className={styles.input}\n                  label=\"Tên người dùng\"\n                  input={{\n                    type: \"text\",\n                    required: true,\n                    id: \"name\",\n                    max: \"100\",\n                    value: user.name,\n                    onChange: changeUserNameHandler,\n                  }}\n                />\n                <Input\n                  className={styles.input}\n                  label=\"Email\"\n                  input={{\n                    type: \"email\",\n                    required: true,\n                    id: \"email\",\n                    value: user.username,\n                    onChange: changeEmailHandler,\n                  }}\n                />\n                <Input\n                  className={styles.input}\n                  label=\"Mật khẩu mới\"\n                  input={{\n                    type: \"password\",\n                    id: \"password\",\n                    require: true,\n                    min: \"8\",\n                    onChange: changePasswordHandler,\n                    placeholder:\n                      \"Mật khẩu mới (Nhập mật khẩu cũ nếu không thay đổi)\",\n                  }}\n                />\n              </Container>\n            </Col>\n            <Col className={styles.col} xs={12} sm={12} md={4} lg={4}>\n              <Container>\n                <p style={{fontWeight: 'bold'}}>Trạng thái tài khoản</p>\n                <div className={styles[\"row__lock\"]}>\n                  <ToggleButton changeStatusHandler={() => dispatch(userActions.lockAccount())} isClicked={user.islocked}/>\n                  <Badge isLocked={user.islocked}/>\n                </div>\n                <Button className={styles['btn__submit']} variant=\"contained\" type=\"submit\">\n                  Xác nhận\n                </Button>\n              </Container>\n            </Col>\n          </Row>\n        </form>\n      )}\n    </Layout>\n  );\n};\n\nexport default UserDetail;\n"]},"metadata":{},"sourceType":"module"}