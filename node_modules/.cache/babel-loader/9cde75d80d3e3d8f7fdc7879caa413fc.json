{"ast":null,"code":"var _jsxFileName = \"/Users/hoanganh0722/Desktop/Web/gstorevn/src/components/Navigation/Navigation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Container from \"../../layout/container/container\";\nimport LinkNavigation from \"./LinkNavigation\";\nimport Overlay from \"../Overlay/Overlay\";\nimport ReactDOM from \"react-dom\";\nimport Section from \"../Section/Section\";\nimport Wave from \"./Wave\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navigation = () => {\n  _s();\n\n  const isClicked = useSelector(state => state.layout);\n  console.log(isClicked);\n  const [isBlocked, setIsBlocked] = useState(false);\n\n  const toggleHandler = () => {\n    setIsBlocked(prevState => !prevState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(LinkNavigation, {\n      toggle: toggleHandler,\n      transform: isBlocked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Section, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), isClicked && /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(Overlay, {\n      layout: toggleHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this), document.getElementById(\"overlay\")), /*#__PURE__*/_jsxDEV(Wave, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Navigation, \"lXEzD5EzwilX+EIoeerfaWqM5Is=\", false, function () {\n  return [useSelector];\n});\n\n_c = Navigation;\nexport default Navigation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navigation\");","map":{"version":3,"sources":["/Users/hoanganh0722/Desktop/Web/gstorevn/src/components/Navigation/Navigation.js"],"names":["React","useState","Container","LinkNavigation","Overlay","ReactDOM","Section","Wave","useSelector","useDispatch","Navigation","isClicked","state","layout","console","log","isBlocked","setIsBlocked","toggleHandler","prevState","createPortal","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;;;AACA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMC,SAAS,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACC,MAAhB,CAA7B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,KAAD,CAA1C;;AACA,QAAMiB,aAAa,GAAG,MAAM;AAC1BD,IAAAA,YAAY,CAAEE,SAAD,IAAe,CAACA,SAAjB,CAAZ;AACD,GAFD;;AAGA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,cAAD;AAAgB,MAAA,MAAM,EAAED,aAAxB;AAAuC,MAAA,SAAS,EAAEF;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGL,SAAS,iBACRN,QAAQ,CAACe,YAAT,eACE,QAAC,OAAD;AAAS,MAAA,MAAM,EAAEF;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF,EAEEG,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAFF,CAJJ,eAQI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAnBD;;GAAMZ,U;UACcF,W;;;KADdE,U;AAqBN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Container from \"../../layout/container/container\";\nimport LinkNavigation from \"./LinkNavigation\";\nimport Overlay from \"../Overlay/Overlay\";\nimport ReactDOM from \"react-dom\";\nimport Section from \"../Section/Section\";\nimport Wave from \"./Wave\";\nimport {useSelector, useDispatch} from 'react-redux';\nconst Navigation = () => {\n  const isClicked = useSelector(state => state.layout);\n  console.log(isClicked);\n  const [isBlocked, setIsBlocked] = useState(false);\n  const toggleHandler = () => {\n    setIsBlocked((prevState) => !prevState);\n  };\n  return (\n    <Container>\n      <LinkNavigation toggle={toggleHandler} transform={isBlocked} />\n      <Section />\n      {isClicked &&\n        ReactDOM.createPortal(\n          <Overlay layout={toggleHandler} />,\n          document.getElementById(\"overlay\")\n        )}\n        <Wave/>\n    </Container>\n  );\n};\n\nexport default Navigation;\n"]},"metadata":{},"sourceType":"module"}