{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst usePagination = (data, pageLimit, dataLimit) => {\n  _s();\n\n  const pages = useState(data.length / dataLimit)[0];\n  const [currentPage, setCurrentPage] = useState(1);\n  useEffect(() => {\n    window.scrollTo({\n      behavior: 'auto',\n      top: '0px'\n    });\n  }, [currentPage]);\n\n  const gotoNextPage = () => {\n    setCurrentPage(prevState => {\n      return prevState + 1;\n    });\n  };\n\n  const gotoPrevPage = () => {\n    setCurrentPage(prevState => {\n      return prevState - 1;\n    });\n  };\n\n  const changePage = event => {\n    const pageNumber = Number(event.target.textContent);\n    setCurrentPage(pageNumber);\n  };\n\n  const getPaginatedData = () => {\n    const startIndex = currentPage * dataLimit - dataLimit;\n    const endIndex = startIndex + dataLimit;\n    return data.slice(startIndex, endIndex);\n  };\n\n  const getPaginationGroup = () => {\n    let start = Math.floor((currentPage - 1) / pageLimit) * pageLimit;\n    return new Array(pageLimit).fill().map((_, idx) => start + idx + 1);\n  };\n\n  return {\n    nextPage: gotoNextPage,\n    prevPage: gotoPrevPage,\n    pages: getPaginatedData,\n    currentPage: currentPage,\n    paginationGroup: getPaginationGroup,\n    changeThePage: changePage,\n    ourPagesTotal: pages\n  };\n};\n\n_s(usePagination, \"ZZbRoCOh8JwytN9hhcLHWCexRz0=\");\n\nexport default usePagination;","map":{"version":3,"sources":["/Users/hoanganh0722/Desktop/Web/gstorevn/src/components/hook/use-pagination.js"],"names":["useState","useEffect","usePagination","data","pageLimit","dataLimit","pages","length","currentPage","setCurrentPage","window","scrollTo","behavior","top","gotoNextPage","prevState","gotoPrevPage","changePage","event","pageNumber","Number","target","textContent","getPaginatedData","startIndex","endIndex","slice","getPaginationGroup","start","Math","floor","Array","fill","map","_","idx","nextPage","prevPage","paginationGroup","changeThePage","ourPagesTotal"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,aAAa,GAAG,CAACC,IAAD,EAAOC,SAAP,EAAkBC,SAAlB,KAA+B;AAAA;;AACjD,QAAMC,KAAK,GAAGN,QAAQ,CAACG,IAAI,CAACI,MAAL,GAAcF,SAAf,CAAR,CAAkC,CAAlC,CAAd;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,CAAD,CAA9C;AACAC,EAAAA,SAAS,CAAC,MAAK;AACXS,IAAAA,MAAM,CAACC,QAAP,CAAgB;AAACC,MAAAA,QAAQ,EAAE,MAAX;AAAmBC,MAAAA,GAAG,EAAE;AAAxB,KAAhB;AACH,GAFQ,EAEN,CAACL,WAAD,CAFM,CAAT;;AAGA,QAAMM,YAAY,GAAG,MAAK;AACtBL,IAAAA,cAAc,CAACM,SAAS,IAAI;AACxB,aAAOA,SAAS,GAAG,CAAnB;AACH,KAFa,CAAd;AAGH,GAJD;;AAKA,QAAMC,YAAY,GAAG,MAAK;AACtBP,IAAAA,cAAc,CAACM,SAAS,IAAG;AACvB,aAAOA,SAAS,GAAG,CAAnB;AACH,KAFa,CAAd;AAGH,GAJD;;AAKA,QAAME,UAAU,GAAIC,KAAD,IAAU;AACzB,UAAMC,UAAU,GAAGC,MAAM,CAACF,KAAK,CAACG,MAAN,CAAaC,WAAd,CAAzB;AACAb,IAAAA,cAAc,CAACU,UAAD,CAAd;AACH,GAHD;;AAIA,QAAMI,gBAAgB,GAAG,MAAK;AAC1B,UAAMC,UAAU,GAAGhB,WAAW,GAAGH,SAAd,GAA0BA,SAA7C;AACA,UAAMoB,QAAQ,GAAGD,UAAU,GAAGnB,SAA9B;AACA,WAAOF,IAAI,CAACuB,KAAL,CAAWF,UAAX,EAAuBC,QAAvB,CAAP;AACH,GAJD;;AAKA,QAAME,kBAAkB,GAAG,MAAK;AAC5B,QAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACtB,WAAW,GAAG,CAAf,IAAoBJ,SAA/B,IAA4CA,SAAxD;AACA,WAAO,IAAI2B,KAAJ,CAAU3B,SAAV,EAAqB4B,IAArB,GAA4BC,GAA5B,CAAgC,CAACC,CAAD,EAAIC,GAAJ,KAAYP,KAAK,GAAGO,GAAR,GAAc,CAA1D,CAAP;AACH,GAHD;;AAIA,SAAO;AACHC,IAAAA,QAAQ,EAAEtB,YADP;AAEHuB,IAAAA,QAAQ,EAAErB,YAFP;AAGHV,IAAAA,KAAK,EAAEiB,gBAHJ;AAIHf,IAAAA,WAAW,EAAEA,WAJV;AAKH8B,IAAAA,eAAe,EAAEX,kBALd;AAMHY,IAAAA,aAAa,EAAEtB,UANZ;AAOHuB,IAAAA,aAAa,EAAElC;AAPZ,GAAP;AASH,CAtCD;;GAAMJ,a;;AAwCN,eAAeA,aAAf","sourcesContent":["import  {useState, useEffect } from 'react';\n\nconst usePagination = (data, pageLimit, dataLimit) =>{\n    const pages = useState(data.length / dataLimit)[0];\n    const [currentPage, setCurrentPage] = useState(1);\n    useEffect(() =>{\n        window.scrollTo({behavior: 'auto', top: '0px'});\n    }, [currentPage])\n    const gotoNextPage = () =>{\n        setCurrentPage(prevState => {\n            return prevState + 1;\n        })\n    }\n    const gotoPrevPage = () =>{\n        setCurrentPage(prevState =>{\n            return prevState - 1;\n        })\n    }\n    const changePage = (event) =>{\n        const pageNumber = Number(event.target.textContent);\n        setCurrentPage(pageNumber);\n    }\n    const getPaginatedData = () =>{\n        const startIndex = currentPage * dataLimit - dataLimit;\n        const endIndex = startIndex + dataLimit;\n        return data.slice(startIndex, endIndex);\n    }\n    const getPaginationGroup = () =>{\n        let start = Math.floor((currentPage - 1) / pageLimit) * pageLimit;\n        return new Array(pageLimit).fill().map((_, idx) => start + idx + 1);\n    }\n    return {\n        nextPage: gotoNextPage,\n        prevPage: gotoPrevPage,\n        pages: getPaginatedData,\n        currentPage: currentPage,\n        paginationGroup: getPaginationGroup,\n        changeThePage: changePage,\n        ourPagesTotal: pages\n    }\n}\n\nexport default usePagination;"]},"metadata":{},"sourceType":"module"}