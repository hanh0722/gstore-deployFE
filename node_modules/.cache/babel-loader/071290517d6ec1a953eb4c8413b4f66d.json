{"ast":null,"code":"var _jsxFileName = \"/Users/hoanganh0722/Desktop/Web/gstorevn/src/components/Dashboard/ChangingPost/UI/FieldSet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport styles from \"./FieldSet.module.scss\";\nimport TextArea from \"./Input/TextArea\";\nimport { useLocation, Redirect } from \"react-router-dom\";\nimport Dropzone from \"./Dropzone/Dropzone\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchingPosts } from \"../../../redux-store/change-post\";\nimport Loading from \"../../../../UI/Loading/Loading\";\nimport { changePostActions } from \"../../../redux-store/change-post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FieldSet = () => {\n  _s();\n\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const id = params.get(\"id\");\n  const status = useSelector(state => state.post.status);\n  const data = useSelector(state => state.post.information);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchingPosts(id));\n  }, [id, dispatch]);\n\n  if (data) {\n    console.log(data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [status === \"pending\" && !data && /*#__PURE__*/_jsxDEV(Loading, {\n      className: styles[\"loading-spinner\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), status === \"error\" && !data && /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/404\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 39\n    }, this), status === \"success\" && data && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(TextArea, {\n        textField: {\n          variant: \"outlined\",\n          label: \"Tiêu Đề\",\n          placeholder: \"Tiêu đề trang\",\n          multiline: true,\n          defaultValue: data.title,\n          onChange: event => dispatch(changePostActions.updateTitle(event.target.value))\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n        textField: {\n          label: \"Nội Dung 1\",\n          placeholder: \"Nội dung trong trang\",\n          variant: \"outlined\",\n          multiline: true,\n          defaultValue: data.content1,\n          onChange: event => dispatch(changePostActions.updateContent1(event.target.value))\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n        textField: {\n          variant: \"outlined\",\n          label: \"Nội Dung 2\",\n          placeholder: \"Nội dung trong trang\",\n          multiline: true,\n          defaultValue: data.content2,\n          onChange: event => dispatch(changePostActions.updateContent2(event.target.value))\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n        textField: {\n          variant: \"outlined\",\n          label: \"Nội Dung 3\",\n          placeholder: \"Nội dung trong trang\",\n          multiline: true,\n          defaultValue: data.content3,\n          onChange: event => dispatch(changePostActions.updateContent3(event.target.value))\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Dropzone, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FieldSet, \"zOussmJ6Fi5suUKc0dLTrDCT+yI=\", false, function () {\n  return [useLocation, useSelector, useSelector, useDispatch];\n});\n\n_c = FieldSet;\nexport default FieldSet;\n\nvar _c;\n\n$RefreshReg$(_c, \"FieldSet\");","map":{"version":3,"sources":["/Users/hoanganh0722/Desktop/Web/gstorevn/src/components/Dashboard/ChangingPost/UI/FieldSet.js"],"names":["React","useEffect","styles","TextArea","useLocation","Redirect","Dropzone","useDispatch","useSelector","fetchingPosts","Loading","changePostActions","FieldSet","location","params","URLSearchParams","search","id","get","status","state","post","data","information","dispatch","console","log","form","variant","label","placeholder","multiline","defaultValue","title","onChange","event","updateTitle","target","value","content1","updateContent1","content2","updateContent2","content3","updateContent3"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport styles from \"./FieldSet.module.scss\";\nimport TextArea from \"./Input/TextArea\";\nimport { useLocation, Redirect } from \"react-router-dom\";\nimport Dropzone from \"./Dropzone/Dropzone\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchingPosts } from \"../../../redux-store/change-post\";\nimport Loading from \"../../../../UI/Loading/Loading\";\nimport { changePostActions } from \"../../../redux-store/change-post\";\nconst FieldSet = () => {\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const id = params.get(\"id\");\n  const status = useSelector((state) => state.post.status);\n  const data = useSelector((state) => state.post.information);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchingPosts(id));\n  }, [id, dispatch]);\n  if(data){\n    console.log(data);\n  }\n  return (\n    <>\n      {status === \"pending\" && !data && (\n        <Loading className={styles[\"loading-spinner\"]} />\n      )}\n      {status === \"error\" && !data && <Redirect to=\"/404\" />}\n      {status === \"success\" && data && (\n        <div className={styles.form}>\n          <TextArea\n            textField={{\n              variant: \"outlined\",\n              label: \"Tiêu Đề\",\n              placeholder: \"Tiêu đề trang\",\n              multiline: true,\n              defaultValue: data.title,\n              onChange: event => dispatch(changePostActions.updateTitle(event.target.value))\n            }}\n          />\n          <TextArea\n            textField={{\n              label: \"Nội Dung 1\",\n              placeholder: \"Nội dung trong trang\",\n              variant: \"outlined\",\n              multiline: true,\n              defaultValue: data.content1,\n              onChange: event => dispatch(changePostActions.updateContent1(event.target.value))\n            }}\n          />\n          <TextArea\n            textField={{\n              variant: \"outlined\",\n              label: \"Nội Dung 2\",\n              placeholder: \"Nội dung trong trang\",\n              multiline: true,\n              defaultValue: data.content2,\n              onChange: event => dispatch(changePostActions.updateContent2(event.target.value))\n            }}\n          />\n          <TextArea\n            textField={{\n              variant: \"outlined\",\n              label: \"Nội Dung 3\",\n              placeholder: \"Nội dung trong trang\",\n              multiline: true,\n              defaultValue: data.content3,\n              onChange: event => dispatch(changePostActions.updateContent3(event.target.value))\n            }}\n          />\n          <div>\n            <Dropzone />\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default FieldSet;\n"]},"metadata":{},"sourceType":"module"}