{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst changePostInitialState = {\n  information: null,\n  status: 'pending',\n  images: []\n};\nconst changePostSlice = createSlice({\n  name: 'change-post',\n  initialState: changePostInitialState,\n  reducers: {\n    updateInformation(state, action) {\n      state.information = action.payload;\n    },\n\n    updateImages(state, action) {\n      state.images = action.payload;\n    },\n\n    updateStatus(state, action) {\n      state.status = action.payload;\n    },\n\n    updateTitle(state, action) {\n      state.information.title = action.payload;\n    },\n\n    updateContent1(state, action) {\n      state.information.content1 = action.payload;\n    },\n\n    updateContent2(state, action) {\n      state.information.content2 = action.payload;\n    },\n\n    updateContent3(state, action) {\n      state.information.content3 = action.payload;\n    }\n\n  }\n});\nexport const fetchingPosts = id => {\n  return dispatch => {\n    dispatch(changePostActions.updateStatus('pending'));\n    fetch(`http://localhost:3001/get-post/${id}`).then(response => response.json()).then(data => {\n      dispatch(changePostActions.updateStatus('success'));\n      dispatch(changePostActions.updateInformation(data));\n    }).catch(err => {\n      dispatch(changePostActions.updateStatus('error'));\n    });\n  };\n};\nexport const changePostActions = changePostSlice.actions;\nexport default changePostSlice;","map":{"version":3,"sources":["/Users/hoanganh0722/Desktop/Web/gstorevn/src/components/redux-store/change-post.js"],"names":["createSlice","changePostInitialState","information","status","images","changePostSlice","name","initialState","reducers","updateInformation","state","action","payload","updateImages","updateStatus","updateTitle","title","updateContent1","content1","updateContent2","content2","updateContent3","content3","fetchingPosts","id","dispatch","changePostActions","fetch","then","response","json","data","catch","err","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,sBAAsB,GAAG;AAC3BC,EAAAA,WAAW,EAAE,IADc;AAE3BC,EAAAA,MAAM,EAAE,SAFmB;AAG3BC,EAAAA,MAAM,EAAE;AAHmB,CAA/B;AAKA,MAAMC,eAAe,GAAGL,WAAW,CAAC;AAChCM,EAAAA,IAAI,EAAE,aAD0B;AAEhCC,EAAAA,YAAY,EAAEN,sBAFkB;AAGhCO,EAAAA,QAAQ,EAAE;AACNC,IAAAA,iBAAiB,CAACC,KAAD,EAAQC,MAAR,EAAe;AAC5BD,MAAAA,KAAK,CAACR,WAAN,GAAoBS,MAAM,CAACC,OAA3B;AACH,KAHK;;AAINC,IAAAA,YAAY,CAACH,KAAD,EAAQC,MAAR,EAAe;AACvBD,MAAAA,KAAK,CAACN,MAAN,GAAeO,MAAM,CAACC,OAAtB;AACH,KANK;;AAONE,IAAAA,YAAY,CAACJ,KAAD,EAAQC,MAAR,EAAe;AACvBD,MAAAA,KAAK,CAACP,MAAN,GAAeQ,MAAM,CAACC,OAAtB;AACH,KATK;;AAUNG,IAAAA,WAAW,CAACL,KAAD,EAAQC,MAAR,EAAe;AACtBD,MAAAA,KAAK,CAACR,WAAN,CAAkBc,KAAlB,GAA0BL,MAAM,CAACC,OAAjC;AACH,KAZK;;AAaNK,IAAAA,cAAc,CAACP,KAAD,EAAQC,MAAR,EAAe;AACzBD,MAAAA,KAAK,CAACR,WAAN,CAAkBgB,QAAlB,GAA6BP,MAAM,CAACC,OAApC;AACH,KAfK;;AAgBNO,IAAAA,cAAc,CAACT,KAAD,EAAQC,MAAR,EAAe;AACzBD,MAAAA,KAAK,CAACR,WAAN,CAAkBkB,QAAlB,GAA6BT,MAAM,CAACC,OAApC;AACH,KAlBK;;AAmBNS,IAAAA,cAAc,CAACX,KAAD,EAAQC,MAAR,EAAe;AACzBD,MAAAA,KAAK,CAACR,WAAN,CAAkBoB,QAAlB,GAA6BX,MAAM,CAACC,OAApC;AACH;;AArBK;AAHsB,CAAD,CAAnC;AA4BA,OAAO,MAAMW,aAAa,GAAIC,EAAD,IAAO;AAChC,SAAQC,QAAD,IAAa;AAChBA,IAAAA,QAAQ,CAACC,iBAAiB,CAACZ,YAAlB,CAA+B,SAA/B,CAAD,CAAR;AACAa,IAAAA,KAAK,CAAE,kCAAiCH,EAAG,EAAtC,CAAL,CAA8CI,IAA9C,CAAmDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAA/D,EACCF,IADD,CACMG,IAAI,IAAG;AACTN,MAAAA,QAAQ,CAACC,iBAAiB,CAACZ,YAAlB,CAA+B,SAA/B,CAAD,CAAR;AACAW,MAAAA,QAAQ,CAACC,iBAAiB,CAACjB,iBAAlB,CAAoCsB,IAApC,CAAD,CAAR;AACH,KAJD,EAIGC,KAJH,CAISC,GAAG,IAAG;AACXR,MAAAA,QAAQ,CAACC,iBAAiB,CAACZ,YAAlB,CAA+B,OAA/B,CAAD,CAAR;AACH,KAND;AAOH,GATD;AAUH,CAXM;AAaP,OAAO,MAAMY,iBAAiB,GAAGrB,eAAe,CAAC6B,OAA1C;AACP,eAAe7B,eAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst changePostInitialState = {\n    information: null,\n    status: 'pending',\n    images: []\n}\nconst changePostSlice = createSlice({\n    name: 'change-post',\n    initialState: changePostInitialState,\n    reducers: {\n        updateInformation(state, action){\n            state.information = action.payload\n        },\n        updateImages(state, action){\n            state.images = action.payload;\n        },\n        updateStatus(state, action){\n            state.status = action.payload\n        },\n        updateTitle(state, action){\n            state.information.title = action.payload\n        },\n        updateContent1(state, action){\n            state.information.content1 = action.payload\n        },\n        updateContent2(state, action){\n            state.information.content2 = action.payload\n        },\n        updateContent3(state, action){\n            state.information.content3 = action.payload\n        }\n    }\n})\n\nexport const fetchingPosts = (id) =>{\n    return (dispatch) =>{\n        dispatch(changePostActions.updateStatus('pending'));\n        fetch(`http://localhost:3001/get-post/${id}`).then(response => response.json())\n        .then(data =>{\n            dispatch(changePostActions.updateStatus('success'));\n            dispatch(changePostActions.updateInformation(data));\n        }).catch(err =>{\n            dispatch(changePostActions.updateStatus('error'))\n        })\n    }\n}\n\nexport const changePostActions = changePostSlice.actions;\nexport default changePostSlice;"]},"metadata":{},"sourceType":"module"}